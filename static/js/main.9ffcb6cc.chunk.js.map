{"version":3,"sources":["UserContext.js","hooks/useStandardError.js","components/PostBox.js","components/Like.js","components/Post.js","components/CommentPostBox.js","components/Comment.js","components/ExpandedPost.js","components/PostModal.js","pages/Home.js","pages/PostPage.js","pages/Profile.js","pages/Settings.js","pages/Register.js","pages/Login.js","pages/Logout.js","pages/Error404.js","components/NavBar.js","components/WaitOnWake.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","UserProvider","props","useState","isLoggedIn","setIsLoggedIn","username","setUsername","userID","setUserID","access","setAccess","window","localStorage","getItem","token","setToken","clearUser","removeItem","axios","defaults","headers","common","useEffect","decodedToken","jwt_decode","exp","Date","now","Number","setItem","Provider","value","children","useStandardError","useCallback","err","isCancel","toast","error","response","data","PostBox","maxCharacters","standardError","inputText","setInputText","characterCounter","setCharacterCounter","className","style","margin","required","onChange","e","text","target","length","substr","placeholder","onClick","post","Post","then","refreshPosts","catch","marginTop","float","color","Likes","useContext","userData","postID","totalLikes","isUserLiked","refresh","deleteLike","delete","PostID","addLike","put","display","justifyContent","alignItems","width","cursor","icon","faSolidHeart","faHeart","info","marginLeft","fontWeight","isExpanded","isProfile","expandPost","refreshIndex","setRefreshIndex","postData","setPostData","setTotalLikes","setIsUserLiked","totalComments","setTotalComments","isEditMode","setIsEditMode","editInput","setEditInput","isPostDeleted","setIsPostDeleted","expandPostClicked","tagName","toLowerCase","refreshPost","forcedRefresh","get","params","ID","res","cancelEdit","overflowX","position","top","right","fontSize","patch","onEdit","confirm","onDelete","left","whiteSpace","padding","date","isEdited","to","Like","max","CommentPostBox","refreshComments","Comment","String","commentID","commentData","setCommentData","refreshComment","CommentID","comment","ExpandedPost","onPostDelete","commentIDs","setCommentIDs","paddingLeft","map","Modal","setAppElement","PostModal","isOpen","closeModal","onRequestClose","content","maxWidth","bottom","overlay","zIndex","backgroundColor","Home","postIDs","setPostIDs","isPostModalVisible","setIsPostModalVisible","selectedPostID","setSelectedPostID","getPostIDs","useRef","isFetching","current","LastID","getMorePosts","posts","lastID","finally","openPostModal","history","pushState","handleScroll","innerHeight","document","documentElement","scrollTop","offsetHeight","addEventListener","removeEventListener","noScroll","on","off","PostPage","useHistory","useParams","push","Profile","profileData","setProfileData","UserID","Username","textAlign","Settings","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","isCurrentPasswordVisible","setIsCurrentPasswordVisible","isNewPasswordVisible","setIsNewPasswordVisible","isConfirmPasswordVisible","setIsConfirmPasswordVisible","onSubmit","preventDefault","Current","New","Confirm","htmlFor","name","type","faEye","faEyeSlash","Register","isPasswordVisible","setIsPasswordVisible","password","setPassword","jwt","autoFocus","faUser","faLock","Login","Logout","Error404","NavBar","isActive","setIsActive","isUsernameDropdownActive","setIsUsernameDropdownActive","handleClick","marginBottom","role","aria-label","aria-expanded","aria-hidden","id","WaitOnWake","isVisible","setIsVisible","setIsServerAwake","setTimeout","pingServer","configure","hideProgressBar","newestOnTop","autoClose","App","isServerAwake","path","exact","component","Boolean","location","hostname","match","baseURL","process","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9ffcb6cc.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\r\nimport jwt_decode from 'jwt-decode'\r\nimport axios from 'axios'\r\n\r\nconst UserContext = createContext()\r\n\r\nexport const UserProvider = props => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n    const [username, setUsername] = useState(\"\")\r\n    const [userID, setUserID] = useState(null)\r\n    const [access, setAccess] = useState(\"User\")\r\n    const [token, setToken] = useState(window.localStorage.getItem('token'))\r\n\r\n    const clearUser = () => {\r\n        setIsLoggedIn(false)\r\n        setUsername(\"\")\r\n        setUserID(null)\r\n        setAccess(\"User\")\r\n        setToken(null)\r\n\r\n        window.localStorage.removeItem('token')\r\n        axios.defaults.headers.common['Authorization'] = null;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            const decodedToken = jwt_decode(token)\r\n            if (decodedToken.exp > (Date.now() / 1000)) {\r\n                axios.defaults.headers.common['Authorization'] = token;\r\n\r\n                setIsLoggedIn(true)\r\n                setUsername(decodedToken[\"Username\"])\r\n                setUserID(Number(decodedToken[\"UserID\"]))\r\n                setAccess(decodedToken[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"])\r\n\r\n                if (window.localStorage.getItem('token') !== token)\r\n                    window.localStorage.setItem('token', token)\r\n            } else {\r\n                clearUser()\r\n            }\r\n        } else {\r\n            clearUser()\r\n        }\r\n    }, [token])\r\n\r\n    return (<UserContext.Provider value={[{\r\n        isLoggedIn,\r\n        username,\r\n        userID,\r\n        access,\r\n        token\r\n    },\r\n        setToken]}>\r\n        {props.children}\r\n    </UserContext.Provider>)\r\n\r\n}\r\n\r\nexport default UserContext","import { useCallback } from 'react'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst useStandardError = props => {\r\n\r\n    const standardError = useCallback(err => {\r\n        if (!axios.isCancel(err))\r\n            toast.error(err && err.response && err.response.data && err.response.data.error ? err.response.data.error : \"Sorry, an error occurred\")\r\n    }, [])\r\n\r\n    return standardError\r\n}\r\n\r\nexport default useStandardError","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport useStandardError from '../hooks/useStandardError'\r\n\r\nconst PostBox = props => {\r\n    const maxCharacters = 512\r\n\r\n    const standardError = useStandardError()\r\n    const [inputText, setInputText] = useState(\"\")\r\n    const [characterCounter, setCharacterCounter] = useState(maxCharacters)\r\n\r\n    const handleInput = e => {\r\n        let text = e.target.value\r\n\r\n        if (text.length > maxCharacters)\r\n            text = text.substr(0, maxCharacters)\r\n\r\n        setCharacterCounter(maxCharacters - text.length)\r\n        setInputText(text)\r\n    }\r\n\r\n    const handlePost = () => {\r\n        axios.post(`/api/home/post`, { Post: inputText })\r\n            .then(() => {\r\n                setInputText(\"\")\r\n                setCharacterCounter(maxCharacters)\r\n                props.refreshPosts()\r\n            })\r\n            .catch(standardError)\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\" style={{ margin: \"1rem auto\" }}>\r\n            <div className=\"card-content\">\r\n                <textarea required onChange={handleInput} className=\"textarea\" placeholder=\"Put your words on Word Hole\" value={inputText} />\r\n                <button onClick={handlePost} className=\"button is-primary\" style={{ marginTop: \"0.5rem\" }}>Post</button>\r\n                <div style={{ float: \"right\", color: \"lightgray\" }} >Remaining characters: {characterCounter}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostBox","import React, { useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart as faSolidHeart } from '@fortawesome/free-solid-svg-icons'\r\nimport { faHeart } from '@fortawesome/free-regular-svg-icons'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport useStandardError from '../hooks/useStandardError'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nconst Likes = props => {\r\n    const [userData] = useContext(UserContext)\r\n    const { postID, totalLikes, isUserLiked, refresh } = props\r\n    const standardError = useStandardError()\r\n\r\n    const toggleLike = () => {\r\n        if (!userData.isLoggedIn) {\r\n            toast.info(\"Please log in to Like posts\")\r\n            return\r\n        }\r\n\r\n        if (isUserLiked)\r\n            deleteLike()\r\n        else\r\n            addLike()\r\n    }\r\n\r\n    const deleteLike = () => {\r\n        axios.delete(`/api/likes`,\r\n            { data: { PostID: postID } })\r\n            .then(() => {\r\n                refresh()\r\n            })\r\n            .catch(standardError)\r\n    }\r\n\r\n    const addLike = () => {\r\n        axios.put(`/api/likes`, { PostID: postID })\r\n            .then(() => {\r\n                refresh()\r\n            })\r\n            .catch(standardError)\r\n    }\r\n\r\n    return <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", width: \"1.5rem\" }}>\r\n        <FontAwesomeIcon style={{ marginTop: \"0.15rem\", color: \"fuchsia\", cursor: \"pointer\" }} icon={isUserLiked ? faSolidHeart : faHeart} onClick={toggleLike} />\r\n        <div style={{ marginLeft: \"0.25rem\", fontWeight: 600 }}>{`${totalLikes ? `(${totalLikes})` : \"\"}`}</div>\r\n    </div>\r\n}\r\n\r\nexport default Likes","import React, { useState, useEffect, useCallback, useContext } from 'react'\r\nimport Linkify from 'react-linkify'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nimport Like from '../components/Like'\r\n\r\nimport useStandardError from '../hooks/useStandardError'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nimport '../components/css/LinkButton.css'\r\n\r\nconst Post = props => {\r\n    const maxCharacters = 512\r\n\r\n    const standardError = useStandardError()\r\n    const [userData] = useContext(UserContext)\r\n\r\n    const { postID, isExpanded, isProfile, expandPost, refreshIndex, setRefreshIndex } = props\r\n    const [postData, setPostData] = useState(null)\r\n\r\n    const [totalLikes, setTotalLikes] = useState(null)\r\n    const [isUserLiked, setIsUserLiked] = useState(null)\r\n    const [totalComments, setTotalComments] = useState(null)\r\n\r\n    const [isEditMode, setIsEditMode] = useState(false)\r\n    const [editInput, setEditInput] = useState(\"\")\r\n    const [characterCounter, setCharacterCounter] = useState(maxCharacters)\r\n\r\n    const [isPostDeleted, setIsPostDeleted] = useState(false)\r\n\r\n    const expandPostClicked = e => {\r\n        if (isEditMode || isExpanded)\r\n            return\r\n\r\n        if (e.target && e.target.tagName && e.target.tagName.toLowerCase() !== \"a\")\r\n            expandPost(postID)\r\n    }\r\n\r\n    const refreshPost = useCallback((forcedRefresh) => {\r\n        if (postID === null)\r\n            return\r\n\r\n        axios.get(`/api/post`,\r\n            { params: { ID: postID } })\r\n            .then(res => {\r\n                setPostData(res.data.post)\r\n                setTotalLikes(res.data.totalLikes)\r\n                setTotalComments(res.data.totalComments)\r\n                setIsUserLiked(res.data.isUserLiked)\r\n            })\r\n            .catch(standardError)\r\n    }, [postID, standardError])\r\n\r\n    const handleInput = e => {\r\n        let text = e.target.value\r\n\r\n        if (text.length > maxCharacters)\r\n            text = text.substr(0, maxCharacters)\r\n\r\n        setCharacterCounter(maxCharacters - text.length)\r\n        setEditInput(text)\r\n    }\r\n\r\n    const startEdit = () => {\r\n        const text = postData && postData.post ? postData.post : \"\"\r\n        setEditInput(text)\r\n        setIsEditMode(true)\r\n        setCharacterCounter(maxCharacters - text.length)\r\n    }\r\n\r\n    const cancelEdit = () => {\r\n        setEditInput(\"\")\r\n        setIsEditMode(false)\r\n        setCharacterCounter(maxCharacters)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!postData && !isPostDeleted && postID !== null)\r\n            refreshPost()\r\n    }, [refreshPost, postData, isPostDeleted, postID])\r\n\r\n    useEffect(() => {\r\n        if (!isPostDeleted && refreshIndex === postID) {\r\n            refreshPost(true)\r\n            setRefreshIndex(null)\r\n        }\r\n    }, [refreshIndex, postID, refreshPost, setRefreshIndex, isPostDeleted])\r\n\r\n    const deletePost = () => {\r\n        if (window.confirm(\"Are you sure you would like to delete this post?\")) {\r\n            axios.delete(`/api/post`,\r\n                { data: { ID: postID } })\r\n                .then(() => {\r\n                    setIsPostDeleted(true)\r\n                    setPostData(null)\r\n\r\n                    if (props.onDelete)\r\n                        props.onDelete()\r\n                })\r\n                .catch(standardError)\r\n        }\r\n    }\r\n\r\n    const saveEdit = () => {\r\n        axios.patch(`/api/post`,\r\n            { ID: postID, Post: editInput })\r\n            .then(() => {\r\n                cancelEdit()\r\n                refreshPost()\r\n\r\n                if (props.onEdit)\r\n                    props.onEdit()\r\n            })\r\n            .catch(standardError)\r\n    }\r\n\r\n    return <>\r\n        {postData ?\r\n            <div className=\"card\" style={{ margin: \"1rem auto\", overflowX: \"auto\" }}>\r\n                {(userData.userID === postData.userID || userData.access === \"Admin\") &&\r\n                    <div style={{ position: \"absolute\", top: \"0.25rem\", right: \"0.25rem\", fontSize: \"0.7rem\" }}>\r\n                        {isEditMode ?\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                <div className=\"LinkButton\" onClick={cancelEdit}>Cancel</div>\r\n                                <div style={{ width: \"0.5rem\" }}></div>\r\n                                <div className=\"LinkButton\" onClick={saveEdit} style={{ fontWeight: 700 }}>Save</div>\r\n                            </div>\r\n                            :\r\n                            <div className=\"LinkButton\" onClick={startEdit}>Edit</div>\r\n                        }\r\n                    </div>\r\n                }\r\n                <div className=\"card-content\" style={{ cursor: `${isExpanded || isEditMode ? \"auto\" : \"pointer\"}` }} onClick={expandPostClicked}>\r\n                    {isEditMode ?\r\n                        <>\r\n                            <div className=\"LinkButton-Danger\" onClick={deletePost} style={{ position: \"absolute\", top: \"0.25rem\", left: \"0.25rem\", fontSize: \"0.7rem\" }}>Delete</div>\r\n                            <textarea onChange={handleInput} value={editInput} className=\"textarea\" />\r\n                            <div style={{ float: \"right\", color: \"lightgray\" }} >Remaining characters: {characterCounter}</div>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            {isExpanded ?\r\n                                <div style={{ whiteSpace: \"pre-wrap\" }}>\r\n                                    <Linkify>{postData.post}</Linkify>\r\n                                </div>\r\n                                :\r\n                                <div style={{ whiteSpace: \"pre-wrap\" }}>\r\n                                    <Linkify>{postData.post}</Linkify>\r\n                                </div>\r\n                            }\r\n                        </>\r\n                    }\r\n                </div>\r\n                <div className=\"card-footer\" style={{ justifyContent: \"space-between\", fontSize: \"0.7rem\", color: \"gray\", padding: \"1rem\" }}>\r\n                    <div>\r\n                        <div>{`${postData.date}${postData.isEdited ? \" (Edited)\" : \"\"}`}</div>\r\n                        {isProfile ?\r\n                            <div>{`${postData.username}`}</div>\r\n                            :\r\n                            <div className=\"LinkButton\"><Link to={`/p/${postData.username}`}>{`${postData.username}`}</Link></div>\r\n                        }\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Like\r\n                            postID={postID}\r\n                            totalLikes={totalLikes}\r\n                            isUserLiked={isUserLiked}\r\n                            refresh={refreshPost}\r\n                        />\r\n                        {!isExpanded &&\r\n                            <div className=\"LinkButton\" style={{ width: \"5.5rem\" }} onClick={expandPostClicked}>{`Comments${totalComments && totalComments > 0 ? ` (${totalComments})` : \"\"}`}</div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            :\r\n            <>\r\n                {isPostDeleted ?\r\n                    null\r\n                    :\r\n                    <div className=\"card\" style={{ margin: \"1rem auto\" }}>\r\n                        <div className=\"card-content\">\r\n                            <progress className=\"progress is-small is-light\" max=\"100\"></progress>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n\r\n        }\r\n    </>\r\n}\r\n\r\nexport default Post","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport useStandardError from '../hooks/useStandardError'\r\n\r\nconst CommentPostBox = props => {\r\n    const { postID, refreshComments } = props\r\n    const standardError = useStandardError()\r\n\r\n    const [inputText, setInputText] = useState(\"\")\r\n\r\n    const handlePost = () => {\r\n        if (inputText && postID)\r\n            axios.post(`/api/comments`,\r\n                { Comment: String(inputText), PostID: Number(postID) })\r\n                .then(() => {\r\n                    setInputText(\"\")\r\n                    refreshComments()\r\n                })\r\n                .catch(standardError)\r\n    }\r\n\r\n    return <div className=\"card\" style={{ margin: \"1rem auto\" }}>\r\n        <div className=\"card-content\">\r\n            <textarea required className=\"textarea\" value={inputText} onChange={e => setInputText(e.target.value)} placeholder=\"Comment on this post\" />\r\n            <button onClick={handlePost} className=\"button is-primary\" style={{ marginTop: \"0.5rem\" }}>Comment</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default CommentPostBox","import React, { useState, useCallback, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport Linkify from 'react-linkify'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport useStandardError from '../hooks/useStandardError'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nconst Comment = props => {\r\n    const { commentID, refreshComments } = props\r\n    const [userData] = useContext(UserContext)\r\n    const standardError = useStandardError()\r\n\r\n    const [commentData, setCommentData] = useState(null)\r\n\r\n    const [isEditMode, setIsEditMode] = useState(false)\r\n    const [editInput, setEditInput] = useState(\"\")\r\n\r\n    const refreshComment = useCallback(() => {\r\n        axios.get(`/api/comments`,\r\n            { params: { CommentID: commentID } })\r\n            .then(res => {\r\n                setCommentData(res.data)\r\n            })\r\n            .catch(standardError)\r\n    }, [commentID, standardError])\r\n\r\n    const cancelEdit = () => {\r\n        setIsEditMode(false)\r\n        setEditInput(\"\")\r\n    }\r\n\r\n    const saveEdit = () => {\r\n        axios.patch(`/api/comments`,\r\n            { CommentID: commentID, Comment: editInput })\r\n            .then(() => {\r\n                refreshComment()\r\n                cancelEdit()\r\n            })\r\n            .catch(standardError)\r\n    }\r\n\r\n    const startEdit = () => {\r\n        const text = commentData && (commentData.comment ?? \"\")\r\n        setEditInput(text)\r\n        setIsEditMode(true)\r\n    }\r\n\r\n    const deleteComment = () => {\r\n        if (window.confirm(\"Are you sure you would like to delete this comment?\")) {\r\n            axios.delete(`/api/comments`,\r\n                { data: { CommentID: commentID } })\r\n                .then(() => {\r\n                    refreshComments()\r\n                })\r\n                .catch(standardError)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!commentData)\r\n            refreshComment()\r\n    }, [commentData, refreshComment])\r\n\r\n    return <>\r\n        {commentData ?\r\n            <div className=\"card\" style={{ margin: \"1rem auto\", overflowX: \"auto\" }}>\r\n                {(userData.userID === commentData.userID || userData.access === \"Admin\") &&\r\n                    <div style={{ position: \"absolute\", top: \"0.25rem\", right: \"0.25rem\", fontSize: \"0.7rem\" }}>\r\n                        {isEditMode ?\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                <div className=\"LinkButton\" onClick={cancelEdit}>Cancel</div>\r\n                                <div style={{ width: \"0.5rem\" }}></div>\r\n                                <div className=\"LinkButton\" onClick={saveEdit} style={{ fontWeight: 700 }}>Save</div>\r\n                            </div>\r\n                            :\r\n                            <div className=\"LinkButton\" onClick={startEdit}>Edit</div>\r\n                        }\r\n                    </div>\r\n                }\r\n                <div className=\"card-content\">\r\n                    <div style={{ whiteSpace: \"pre-wrap\" }}>\r\n                        {isEditMode ?\r\n                            <>\r\n                                <div className=\"LinkButton-Danger\" onClick={deleteComment} style={{ position: \"absolute\", top: \"0.25rem\", left: \"0.25rem\", fontSize: \"0.7rem\" }}>Delete</div>\r\n                                <textarea onChange={e => setEditInput(e.target.value)} value={editInput} className=\"textarea\" />\r\n                            </>\r\n                            :\r\n                            <Linkify>\r\n                                {`${commentData.comment}`}\r\n                            </Linkify>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-footer\" style={{ justifyContent: \"space-between\", fontSize: \"0.7rem\", color: \"gray\", padding: \"1rem\" }}>\r\n                    <div>\r\n                        <div>{`${commentData.date}${commentData.isEdited ? \" (Edited)\" : \"\"}`}</div>\r\n                        <div className=\"LinkButton\"><Link to={`/p/${commentData.username}`}>{`${commentData.username}`}</Link></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            :\r\n            <div className=\"card\" style={{ margin: \"1rem auto\" }}>\r\n                <div className=\"card-content\">\r\n                    <progress className=\"progress is-small is-light\" max=\"100\"></progress>\r\n                </div>\r\n            </div>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default Comment","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport useStandardError from '../hooks/useStandardError'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nimport Post from '../components/Post'\r\nimport CommentPostBox from '../components/CommentPostBox'\r\nimport Comment from '../components/Comment'\r\n\r\nconst ExpandedPost = props => {\r\n    const { postID, onPostDelete } = props\r\n    const [userData] = useContext(UserContext)\r\n    const standardError = useStandardError()\r\n\r\n    const [commentIDs, setCommentIDs] = useState(null)\r\n\r\n    const refreshComments = useCallback(() => {\r\n        if (postID === null)\r\n            return\r\n\r\n        axios.get(`/api/comments/list`,\r\n            { params: { PostID: postID } })\r\n            .then(res => {\r\n                setCommentIDs(res.data)\r\n            })\r\n            .catch(standardError)\r\n    }, [postID, standardError])\r\n\r\n    useEffect(() => {\r\n        if (!commentIDs)\r\n            refreshComments()\r\n    }, [commentIDs, refreshComments])\r\n\r\n    return <div style={{ overflowX: \"hidden\" }}>\r\n        <Post\r\n            postID={postID}\r\n            isExpanded\r\n            onDelete={onPostDelete}\r\n        />\r\n        {userData.isLoggedIn &&\r\n            <CommentPostBox\r\n                postID={postID}\r\n                refreshComments={refreshComments}\r\n            />}\r\n        {commentIDs && commentIDs.length > 0 &&\r\n            <div style={{ width: \"40rem\", margin: \"1rem auto\", fontWeight: 600, color: \"gray\", paddingLeft: \"2rem\" }} >Comments</div>\r\n        }\r\n        {commentIDs &&\r\n            commentIDs.map(commentID => <Comment\r\n                key={commentID}\r\n                commentID={commentID}\r\n                refreshComments={refreshComments}\r\n            />)\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default ExpandedPost","import React from 'react'\r\nimport Modal from 'react-modal'\r\n\r\nimport ExpandedPost from '../components/ExpandedPost'\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst PostModal = props => {\r\n    const { isOpen, closeModal, postID } = props\r\n\r\n    const onPostDelete = () => {\r\n        closeModal()\r\n    }\r\n\r\n    return <Modal\r\n        isOpen={isOpen}\r\n        onRequestClose={closeModal}\r\n        style={{\r\n            content: {\r\n                padding: \"1rem 0 1rem 0\",\r\n                maxWidth: \"60rem\",\r\n                margin: \"auto\",\r\n                top: \"0.5rem\",\r\n                bottom: \"0.5rem\",\r\n                left: \"1.75rem\",\r\n                right: \"1.75rem\"\r\n            },\r\n            overlay: {\r\n                zIndex: 35,\r\n                backgroundColor: \"rgba(128, 128, 128, 0.7)\"\r\n            }\r\n        }}\r\n    >\r\n        <div className=\"container\">\r\n            <ExpandedPost\r\n                postID={postID}\r\n                onPostDelete={onPostDelete} />\r\n        </div>\r\n    </Modal>\r\n}\r\n\r\nexport default PostModal","import React, { useEffect, useState, useContext, useCallback, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport noScroll from 'no-scroll'\r\n\r\nimport useStandardError from '../hooks/useStandardError'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nimport PostBox from '../components/PostBox'\r\nimport Post from '../components/Post'\r\nimport PostModal from '../components/PostModal'\r\n\r\nconst Home = props => {\r\n    const [userData] = useContext(UserContext)\r\n    const standardError = useStandardError()\r\n\r\n    const [postIDs, setPostIDs] = useState(null)\r\n\r\n    const [isPostModalVisible, setIsPostModalVisible] = useState(false)\r\n    const [selectedPostID, setSelectedPostID] = useState(null)\r\n    const [refreshIndex, setRefreshIndex] = useState(null)\r\n\r\n    const getPostIDs = useRef()\r\n    const isFetching = useRef(false)\r\n    getPostIDs.current = () => { return postIDs }\r\n\r\n    const refreshPosts = useCallback(() => {\r\n        axios.get(`/api/home/posts`,\r\n            { params: { LastID: null } })\r\n            .then(res => setPostIDs(res.data))\r\n            .catch(standardError)\r\n    }, [standardError])\r\n\r\n    const getMorePosts = useCallback(() => {\r\n        const posts = getPostIDs.current()\r\n\r\n        if (!posts || posts.length < 1)\r\n            return\r\n\r\n        const lastID = posts[posts.length - 1]\r\n\r\n        if (lastID <= 1)\r\n            return\r\n\r\n        isFetching.current = true\r\n        axios.get(`/api/home/posts`,\r\n            { params: { lastID } })\r\n            .then(res => setPostIDs([...postIDs, ...res.data]))\r\n            .catch(standardError)\r\n            .finally(() => isFetching.current = false)\r\n    }, [postIDs, standardError])\r\n\r\n    const closePostModal = () => {\r\n        setIsPostModalVisible(false)\r\n        setRefreshIndex(selectedPostID)\r\n        setSelectedPostID(null)\r\n        window.history.pushState(null, null, '/')\r\n    }\r\n\r\n    const openPostModal = postID => {\r\n        setSelectedPostID(postID)\r\n        setIsPostModalVisible(true)\r\n        window.history.pushState(null, null, `/wh/${postID}`)\r\n    }\r\n\r\n    const handleScroll = useCallback(e => {\r\n        if (!isFetching.current && window.innerHeight + document.documentElement.scrollTop + 200 >= document.documentElement.offsetHeight)\r\n            getMorePosts()\r\n    }, [getMorePosts])\r\n\r\n    useEffect(() => {\r\n        if (!postIDs)\r\n            refreshPosts()\r\n    }, [postIDs, refreshPosts])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll)\r\n        return () => window.removeEventListener('scroll', handleScroll)\r\n    }, [handleScroll])\r\n\r\n    useEffect(() => { // Trigger infinite scroll if not enough height for a scrollbar\r\n        if (postIDs && postIDs.length > 0 && window.innerHeight > document.documentElement.offsetHeight)\r\n            handleScroll()\r\n    }, [postIDs, handleScroll])\r\n\r\n    useEffect(() => {\r\n        if (isPostModalVisible)\r\n            noScroll.on()\r\n        else\r\n            noScroll.off()\r\n\r\n        return () => noScroll.off()\r\n    }, [isPostModalVisible])\r\n\r\n    return <>\r\n        <div className=\"container\">\r\n            {userData.isLoggedIn &&\r\n                <PostBox refreshPosts={refreshPosts} />\r\n            }\r\n            {postIDs &&\r\n                postIDs.map(postID => <Post\r\n                    key={postID}\r\n                    postID={postID}\r\n                    expandPost={openPostModal}\r\n                    refreshIndex={refreshIndex}\r\n                    setRefreshIndex={setRefreshIndex}\r\n                />)\r\n            }\r\n        </div>\r\n        <PostModal\r\n            isOpen={isPostModalVisible}\r\n            closeModal={closePostModal}\r\n            postID={selectedPostID}\r\n        />\r\n    </>\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\n\r\nimport ExpandedPost from '../components/ExpandedPost'\r\n\r\nconst PostPage = props => {\r\n    const history = useHistory()\r\n    const { postID } = useParams()\r\n\r\n    const postDeleted = () => {\r\n        history.push(\"/\")\r\n    }\r\n\r\n    return <div className=\"container\">\r\n        <ExpandedPost postID={postID} onPostDelete={postDeleted} />\r\n    </div>\r\n}\r\n\r\nexport default PostPage","import React, { useEffect, useState, useCallback } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport noScroll from 'no-scroll'\r\n\r\nimport useStandardError from '../hooks/useStandardError'\r\n\r\nimport Post from '../components/Post'\r\nimport PostModal from '../components/PostModal'\r\n\r\nconst Profile = props => {\r\n    const standardError = useStandardError()\r\n\r\n    const { username } = useParams()\r\n\r\n    const [profileData, setProfileData] = useState(null)\r\n    const [postIDs, setPostIDs] = useState(null)\r\n\r\n    const [isPostModalVisible, setIsPostModalVisible] = useState(false)\r\n    const [selectedPostID, setSelectedPostID] = useState(null)\r\n    const [refreshIndex, setRefreshIndex] = useState(null)\r\n\r\n    const refreshPosts = useCallback(() => {\r\n        axios.get(`/api/profile/posts`,\r\n            { params: { UserID: profileData.userID } })\r\n            .then(res => setPostIDs(res.data))\r\n            .catch(standardError)\r\n    }, [profileData, standardError])\r\n\r\n    const closePostModal = () => {\r\n        setIsPostModalVisible(false)\r\n        setRefreshIndex(selectedPostID)\r\n        setSelectedPostID(null)\r\n        window.history.pushState(null, null, `/p/${username}`)\r\n    }\r\n\r\n    const openPostModal = postID => {\r\n        setSelectedPostID(postID)\r\n        setIsPostModalVisible(true)\r\n        window.history.pushState(null, null, `/wh/${postID}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`/api/profile/user`,\r\n            { params: { Username: username } })\r\n            .then(res => setProfileData(res.data))\r\n            .catch(standardError)\r\n    }, [username, standardError])\r\n\r\n    useEffect(() => {\r\n        if (profileData) {\r\n            refreshPosts()\r\n        }\r\n    }, [profileData, refreshPosts])\r\n\r\n    useEffect(() => {\r\n        if (isPostModalVisible)\r\n            noScroll.on()\r\n        else\r\n            noScroll.off()\r\n\r\n        return () => noScroll.off()\r\n    }, [isPostModalVisible])\r\n\r\n    return <>\r\n        <div className=\"container\">\r\n            {profileData &&\r\n                <>\r\n                    <h5 style={{ textAlign: \"center\" }} className=\"title\">{`${profileData.username}'s Posts`}</h5>\r\n                    <>\r\n                        {profileData.access !== \"User\" &&\r\n                            <h5 style={{ textAlign: \"center\" }} className=\"subtitle\">{profileData.access}</h5>\r\n                        }\r\n                    </>\r\n                </>\r\n            }\r\n            {postIDs &&\r\n                postIDs.map(postID => <Post\r\n                    key={postID}\r\n                    postID={postID}\r\n                    expandPost={openPostModal}\r\n                    refreshIndex={refreshIndex}\r\n                    setRefreshIndex={setRefreshIndex}\r\n                    isProfile\r\n                />)\r\n            }\r\n        </div>\r\n        <PostModal\r\n            isOpen={isPostModalVisible}\r\n            closeModal={closePostModal}\r\n            postID={selectedPostID}\r\n            refresh={refreshPosts}\r\n        />\r\n    </>\r\n}\r\n\r\nexport default Profile","import React, { useState, useContext } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\r\nimport { toast } from 'react-toastify'\r\nimport axios from 'axios'\r\n\r\nimport useStandardError from '../hooks/useStandardError'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nconst Settings = props => {\r\n    const standardError = useStandardError()\r\n    const [userData] = useContext(UserContext)\r\n\r\n    const [currentPassword, setCurrentPassword] = useState(\"\")\r\n    const [newPassword, setNewPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    const [isCurrentPasswordVisible, setIsCurrentPasswordVisible] = useState(false)\r\n    const [isNewPasswordVisible, setIsNewPasswordVisible] = useState(false)\r\n    const [isConfirmPasswordVisible, setIsConfirmPasswordVisible] = useState(false)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        axios.patch(`/api/settings/password`,\r\n            { Current: currentPassword, New: newPassword, Confirm: confirmPassword })\r\n            .then(() => {\r\n                toast.info(\"Password updated\")\r\n                setCurrentPassword(\"\")\r\n                setNewPassword(\"\")\r\n                setConfirmPassword(\"\")\r\n            })\r\n            .catch(standardError)\r\n    }\r\n\r\n    return <>\r\n        {userData.isLoggedIn ?\r\n            <div className=\"container\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-title\">\r\n                        <h1>Update Password</h1>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <label htmlFor=\"current-password\" className=\"label\">Current Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded\">\r\n                                    <input value={currentPassword} onChange={e => setCurrentPassword(e.target.value)} className=\"input\" name=\"current-password\" type={isCurrentPasswordVisible ? \"input\" : \"password\"} placeholder=\"Current Password\" required />\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsCurrentPasswordVisible(!isCurrentPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isCurrentPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <label htmlFor=\"new-password\" className=\"label\">New Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded\">\r\n                                    <input value={newPassword} onChange={e => setNewPassword(e.target.value)} className=\"input\" name=\"new-password\" type={isNewPasswordVisible ? \"input\" : \"password\"} placeholder=\"New Password\" required />\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsNewPasswordVisible(!isNewPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isNewPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <label htmlFor=\"confirm-password\" className=\"label\">Confirm Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded\">\r\n                                    <input value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} className=\"input\" name=\"confirm-password\" type={isConfirmPasswordVisible ? \"input\" : \"password\"} placeholder=\"Confirm Password\" required />\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsConfirmPasswordVisible(!isConfirmPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isConfirmPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <p className=\"control\">\r\n                                    <button type=\"submit\" className=\"button is-primary\">Update</button>\r\n                                </p>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            :\r\n            <div className=\"container\">\r\n                Please log in or create an account to view this page.\r\n        </div>}\r\n    </>\r\n}\r\n\r\nexport default Settings","import React, { useState, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faLock, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport useStandardError from '../hooks/useStandardError'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nimport './css/LoginRegister.css'\r\n\r\nconst Register = props => {\r\n    const standardError = useStandardError()\r\n    const [userData, setToken] = useContext(UserContext)\r\n\r\n    const [isPasswordVisible, setIsPasswordVisible] = useState(false)\r\n    const [isConfirmPasswordVisible, setIsConfirmPasswordVisible] = useState(false)\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        axios.post(`/api/register`, { username, password, Confirm: confirmPassword })\r\n            .then(res => {\r\n                setToken(res.data.jwt)\r\n            })\r\n            .catch(standardError)\r\n    }\r\n\r\n    if (userData.isLoggedIn)\r\n        return <Redirect to=\"/\" />\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-title\">\r\n                        <h1>Registration</h1>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <label htmlFor=\"username\" className=\"label\">Username</label>\r\n                            <div className=\"field\">\r\n                                <p className=\"control has-icons-left\">\r\n                                    <input value={username} onChange={e => setUsername(e.target.value)} className=\"input\" type=\"text\" name=\"username\" placeholder=\"Username\" autoFocus required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <FontAwesomeIcon icon={faUser} />\r\n                                    </span>\r\n                                </p>\r\n                            </div>\r\n                            <label htmlFor=\"password\" className=\"label\">Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded has-icons-left\">\r\n                                    <input value={password} onChange={e => setPassword(e.target.value)} className=\"input\" name=\"password\" type={isPasswordVisible ? \"input\" : \"password\"} placeholder=\"Password\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <FontAwesomeIcon icon={faLock} />\r\n                                    </span>\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsPasswordVisible(!isPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <label htmlFor=\"confirm-password\" className=\"label\">Confirm Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded has-icons-left\">\r\n                                    <input value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} className=\"input\" name=\"confirm-password\" type={isConfirmPasswordVisible ? \"input\" : \"password\"} placeholder=\"Confirm Password\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <FontAwesomeIcon icon={faLock} />\r\n                                    </span>\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsConfirmPasswordVisible(!isConfirmPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isConfirmPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <p className=\"control\">\r\n                                    <button type=\"submit\" className=\"button is-primary\">Register</button>\r\n                                </p>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Register","import React, { useState, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faLock, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport useStandardError from '../hooks/useStandardError'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nconst Login = props => {\r\n    const [userData, setToken] = useContext(UserContext)\r\n    const standardError = useStandardError()\r\n    \r\n    const [isPasswordVisible, setIsPasswordVisible] = useState(false)\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        axios.post(`/api/login`, { username, password })\r\n            .then(res => {\r\n                setToken(res.data.jwt)\r\n            })\r\n            .catch(standardError)\r\n    }\r\n\r\n    if (userData.isLoggedIn)\r\n        return <Redirect to=\"/\" />\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-title\">\r\n                        <h1>Login</h1>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <label htmlFor=\"username\" className=\"label\">Username</label>\r\n                            <div className=\"field\">\r\n                                <p className=\"control has-icons-left\">\r\n                                    <input value={username} onChange={e => setUsername(e.target.value)} className=\"input\" type=\"text\" name=\"username\" placeholder=\"Username\" autoFocus required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <FontAwesomeIcon icon={faUser} />\r\n                                    </span>\r\n                                </p>\r\n                            </div>\r\n                            <label htmlFor=\"password\" className=\"label\">Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded has-icons-left\">\r\n                                    <input value={password} onChange={e => setPassword(e.target.value)} className=\"input\" name=\"password\" type={isPasswordVisible ? \"input\" : \"password\"} placeholder=\"Password\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <FontAwesomeIcon icon={faLock} />\r\n                                    </span>\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsPasswordVisible(!isPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <p className=\"control\">\r\n                                    <button type=\"submit\" className=\"button is-primary\">Log In</button>\r\n                                </p>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Login","import React, { useEffect, useContext } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nconst Logout = props => {\r\n    const [userData, setToken] = useContext(UserContext)\r\n\r\n    useEffect(() => {\r\n        if (userData.token) {\r\n            setToken(null)\r\n            toast.info(\"You have been logged out\")\r\n        }\r\n    }, [userData.token, setToken])\r\n\r\n    return <>\r\n        {userData.token ?\r\n            <Redirect to=\"/\" />\r\n            :\r\n            <div>\r\n                Logging out...\r\n            </div>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default Logout","import React from 'react'\r\n\r\nconst Error404 = props =>\r\n    <div className=\"container\">\r\n        <h1 className=\"title\">\r\n            404\r\n      </h1>\r\n        <p className=\"subtitle\">\r\n            Nothing was found at this location\r\n      </p>\r\n    </div>\r\n\r\nexport default Error404","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nimport './css/NavBar.css'\r\n\r\nconst NavBar = () => {\r\n    const [userData] = useContext(UserContext)\r\n    const [isActive, setIsActive] = useState(false)\r\n    const [isUsernameDropdownActive, setIsUsernameDropdownActive] = useState(false)\r\n\r\n    const handleClick = useCallback(e => {\r\n        if (isUsernameDropdownActive)\r\n            setIsUsernameDropdownActive(false)\r\n    }, [isUsernameDropdownActive])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('click', handleClick)\r\n        return () => window.removeEventListener('click', handleClick)\r\n    }, [handleClick])\r\n\r\n    return (\r\n        <nav style={{ marginBottom: \"1rem\" }} className=\"navbar is-dark\" role=\"navigation\" aria-label=\"main navigation\">\r\n            <div className=\"navbar-brand\">\r\n                <Link className=\"navbar-item NavBar-brand\" to=\"/\">Word Hole</Link>\r\n                <div onClick={() => setIsActive(!isActive)} role=\"button\" className={`${isActive ? \"is-active\" : \"\"} navbar-burger`} aria-label=\"menu\" aria-expanded=\"false\">\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`${isActive ? \"is-active\" : \"\"} navbar-menu`}>\r\n                <div className=\"navbar-end\">\r\n                    {userData.isLoggedIn ?\r\n                        <div id={\"navbar-username-dropdown-button\"} className={`navbar-item has-dropdown ${isUsernameDropdownActive ? \"is-active\" : \"\"}`}>\r\n                            <div className=\"navbar-link\" onClick={() => setIsUsernameDropdownActive(!isUsernameDropdownActive)}>\r\n                                {userData.username}\r\n                            </div>\r\n\r\n                            <div className=\"navbar-dropdown\">\r\n                                <Link className=\"navbar-item\" to={`/p/${userData.username}`}>Profile</Link>\r\n                                <Link className=\"navbar-item\" to={`/settings`}>Settings</Link>\r\n                                <hr className=\"navbar-divider\" />\r\n                                <Link className=\"navbar-item\" to={\"/logout\"}>Log Out</Link>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div className=\"navbar-item\">\r\n                            <div className=\"buttons\">\r\n                                <Link className=\"button is-dark\" to={\"/register\"}>Register</Link>\r\n                                <Link className=\"button is-primary\" to={\"/login\"}><strong>Log In</strong></Link>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </nav >\r\n    )\r\n}\r\n\r\nexport default NavBar","import React, { useState, useEffect, useCallback } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst WaitOnWake = props => {\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const { setIsServerAwake } = props\r\n\r\n    useEffect(() => {\r\n        if (!isVisible)\r\n            setTimeout(() => setIsVisible(true), 700)\r\n    }, [isVisible])\r\n\r\n    const pingServer = useCallback(()=> {\r\n        axios.get(`/api/common/hello`)\r\n            .then(() => setIsServerAwake(true))\r\n            .catch(() => setTimeout(pingServer, 500))\r\n    }, [setIsServerAwake])\r\n\r\n    useEffect(() => pingServer(), [pingServer])\r\n\r\n    return <>\r\n        {isVisible ?\r\n            <div className=\"container\">\r\n                <h2 className=\"subtitle\" style={{ marginTop: \"2rem\" }}>Waking up the server...</h2>\r\n                <progress className=\"progress is-small is-primary\" max=\"100\"></progress>\r\n            </div>\r\n            :\r\n            <></>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default WaitOnWake","import React, { useState } from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport { UserProvider } from './UserContext'\r\n\r\nimport Home from './pages/Home'\r\nimport PostPage from './pages/PostPage'\r\nimport Profile from './pages/Profile'\r\nimport Settings from './pages/Settings'\r\nimport Register from './pages/Register'\r\nimport Login from './pages/Login'\r\nimport Logout from './pages/Logout'\r\nimport Error404 from './pages/Error404'\r\n\r\nimport NavBar from './components/NavBar'\r\nimport WaitOnWake from './components/WaitOnWake'\r\n\r\ntoast.configure({\r\n    hideProgressBar: true,\r\n    newestOnTop: true,\r\n    autoClose: 3000\r\n})\r\n\r\nconst App = () => {\r\n    const [isServerAwake, setIsServerAwake] = useState(false)\r\n\r\n    return <>\r\n        {isServerAwake ?\r\n            <BrowserRouter>\r\n                <UserProvider>\r\n                    <NavBar />\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={Home} />\r\n                        <Route path=\"/wh/:postID\" exact component={PostPage} />\r\n                        <Route path=\"/p/:username\" exact component={Profile} />\r\n                        <Route path=\"/settings\" exact component={Settings} />\r\n                        <Route path=\"/register\" exact component={Register} />\r\n                        <Route path=\"/login\" exact component={Login} />\r\n                        <Route path=\"/logout\" exact component={Logout} />\r\n                        <Route component={Error404} />\r\n                    </Switch>\r\n                </UserProvider>\r\n            </BrowserRouter>\r\n            :\r\n            <WaitOnWake setIsServerAwake={setIsServerAwake} />\r\n        }\r\n    </>\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport axios from 'axios'\r\n\r\nimport 'bulma/css/bulma.css'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}