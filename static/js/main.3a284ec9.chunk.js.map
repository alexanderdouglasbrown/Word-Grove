{"version":3,"sources":["UserContext.js","components/WaitOnWake.js","components/PostBox.js","components/Like.js","components/Post.js","components/CommentPostBox.js","components/Comment.js","components/ExpandedPost.js","components/PostModal.js","pages/Home.js","pages/PostPage.js","pages/Profile.js","pages/Settings.js","pages/Register.js","pages/Login.js","pages/Logout.js","pages/Error404.js","components/NavBar.js","components/LoginWatcher.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","UserProvider","props","useState","isLoggedIn","setIsLoggedIn","username","setUsername","userID","setUserID","access","setAccess","token","setToken","Provider","value","children","WaitOnWake","oneSecLater","setOneSecLater","useEffect","setTimeout","className","style","marginTop","max","PostBox","useContext","userData","inputText","setInputText","characterCounter","setCharacterCounter","margin","required","onChange","e","text","target","length","substr","placeholder","onClick","axios","post","process","Post","headers","Authorization","then","refreshPosts","catch","toast","error","float","color","Likes","postID","totalLikes","isUserLiked","refresh","deleteLike","delete","data","PostID","addLike","put","display","justifyContent","alignItems","width","cursor","icon","faSolidHeart","faHeart","info","marginLeft","fontWeight","isExpanded","isProfile","expandPost","refreshIndex","setRefreshIndex","postData","setPostData","setTotalLikes","setIsUserLiked","totalComments","setTotalComments","isEditMode","setIsEditMode","editInput","setEditInput","isPostDeleted","setIsPostDeleted","expandPostClicked","tagName","toLowerCase","refreshPost","useCallback","forcedRefresh","get","params","ID","res","err","response","notFound","cancelEdit","overflowX","position","top","right","fontSize","patch","onEdit","window","confirm","onDelete","left","whiteSpace","padding","date","isEdited","to","Like","CommentPostBox","refreshComments","Comment","commentID","commentData","setCommentData","refreshComment","CommentID","comment","ExpandedPost","onPostDelete","commentIDs","setCommentIDs","paddingLeft","map","key","Modal","setAppElement","PostModal","isOpen","closeModal","onRequestClose","content","maxWidth","bottom","overlay","zIndex","backgroundColor","Home","postIDs","setPostIDs","isPostModalVisible","setIsPostModalVisible","selectedPostID","setSelectedPostID","getPostIDs","useRef","isFetching","current","LastID","getMorePosts","posts","lastID","finally","openPostModal","history","pushState","handleScroll","innerHeight","document","documentElement","scrollTop","offsetHeight","addEventListener","removeEventListener","noScroll","on","off","PostPage","useHistory","useParams","push","Profile","profileData","setProfileData","UserID","Username","textAlign","Settings","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","isCurrentPasswordVisible","setIsCurrentPasswordVisible","isNewPasswordVisible","setIsNewPasswordVisible","isConfirmPasswordVisible","setIsConfirmPasswordVisible","onSubmit","preventDefault","Current","New","Confirm","htmlFor","name","type","faEye","faEyeSlash","Register","isPasswordVisible","setIsPasswordVisible","password","setPassword","useCookies","setCookie","redirect","setRedirect","jwt","autoFocus","faUser","faLock","Login","withCookies","cookies","cookieState","cookie","cookieCleared","setCookieCleared","remove","Error404","NavBar","isActive","setIsActive","isUsernameDropdownActive","setIsUsernameDropdownActive","handleClick","marginBottom","role","aria-label","aria-expanded","aria-hidden","id","globalSetIsLoggedIn","globalSetUsername","globalSetUserID","globalSetAccess","globalSetToken","clearGlobals","cookieToken","jwt_decode","exp","Date","now","Number","configure","hideProgressBar","newestOnTop","autoClose","App","path","exact","component","Logout","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a284ec9.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\r\n\r\nconst UserContext = createContext()\r\n\r\nexport const UserProvider = props => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n    const [username, setUsername] = useState(\"\")\r\n    const [userID, setUserID] = useState(null)\r\n    const [access, setAccess] = useState(\"User\")\r\n    const [token, setToken] = useState(null)\r\n\r\n    return (<UserContext.Provider value={[{\r\n        isLoggedIn,\r\n        username,\r\n        userID,\r\n        access,\r\n        token\r\n    },\r\n        setIsLoggedIn, setUsername, setUserID, setAccess, setToken]}>\r\n        {props.children}\r\n    </UserContext.Provider>)\r\n\r\n}\r\n\r\nexport default UserContext","import React, { useState, useEffect } from 'react'\r\n\r\nconst WaitOnWake = props => {\r\n    const [oneSecLater, setOneSecLater] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (!oneSecLater)\r\n            setTimeout(() => setOneSecLater(true), 1000)\r\n    }, [oneSecLater])\r\n\r\n    return <>\r\n        {oneSecLater ?\r\n            <div className=\"container\">\r\n                <h2 className=\"subtitle\" style={{ marginTop: \"2rem\" }}>Waking up the server...</h2>\r\n                <progress className=\"progress is-small is-primary\" max=\"100\"></progress>\r\n            </div>\r\n            :\r\n            <></>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default WaitOnWake","import React, { useState, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nconst PostBox = props => {\r\n    const maxCharacters = 512\r\n    const [userData] = useContext(UserContext)\r\n\r\n    const [inputText, setInputText] = useState(\"\")\r\n    const [characterCounter, setCharacterCounter] = useState(maxCharacters)\r\n\r\n    const handleInput = e => {\r\n        let text = e.target.value\r\n\r\n        if (text.length > maxCharacters)\r\n            text = text.substr(0, maxCharacters)\r\n\r\n        setCharacterCounter(maxCharacters - text.length)\r\n        setInputText(text)\r\n    }\r\n\r\n    const handlePost = () => {\r\n        axios.post(`${process.env.REACT_APP_API_URL}/api/home/post`, { Post: inputText }, {\r\n            headers: { Authorization: userData.token }\r\n        })\r\n            .then(() => {\r\n                setInputText(\"\")\r\n                setCharacterCounter(maxCharacters)\r\n                props.refreshPosts()\r\n            })\r\n            .catch(() => toast.error(\"Sorry, an error occurred\"))\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\" style={{ margin: \"1rem auto\" }}>\r\n            <div className=\"card-content\">\r\n                <textarea required onChange={handleInput} className=\"textarea\" placeholder=\"Put your words on Word Hole\" value={inputText} />\r\n                <button onClick={handlePost} className=\"button is-primary\" style={{ marginTop: \"0.5rem\" }}>Post</button>\r\n                <div style={{ float: \"right\", color: \"lightgray\" }} >Remaining characters: {characterCounter}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostBox","import React, { useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart as faSolidHeart } from '@fortawesome/free-solid-svg-icons'\r\nimport { faHeart } from '@fortawesome/free-regular-svg-icons'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nconst Likes = props => {\r\n    const [userData] = useContext(UserContext)\r\n    const { postID, totalLikes, isUserLiked, refresh } = props\r\n\r\n    const toggleLike = () => {\r\n        if (!userData.isLoggedIn){\r\n            toast.info(\"Please log in to Like posts\")\r\n            return\r\n        }\r\n        \r\n        if (isUserLiked)\r\n            deleteLike()\r\n        else\r\n            addLike()\r\n    }\r\n\r\n    const deleteLike = () => {\r\n        axios.delete(`${process.env.REACT_APP_API_URL}/api/likes`,\r\n            {\r\n                data: { PostID: postID },\r\n                headers: { Authorization: userData.token }\r\n            })\r\n            .then(() => {\r\n                refresh()\r\n            })\r\n            .catch(() => toast.error(\"Sorry, something went wrong\"))\r\n    }\r\n\r\n    const addLike = () => {\r\n        axios.put(`${process.env.REACT_APP_API_URL}/api/likes`,\r\n            { PostID: postID },\r\n            { headers: { Authorization: userData.token } })\r\n            .then(() => {\r\n                refresh()\r\n            })\r\n            .catch(() => toast.error(\"Sorry, something went wrong\"))\r\n    }\r\n\r\n    return <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", width: \"1.5rem\" }}>\r\n        <FontAwesomeIcon style={{ marginTop: \"0.15rem\", color: \"fuchsia\", cursor: \"pointer\" }} icon={isUserLiked ? faSolidHeart : faHeart} onClick={toggleLike} />\r\n        <div style={{ marginLeft: \"0.25rem\", fontWeight: 600 }}>{`${totalLikes ? `(${totalLikes})` : \"\"}`}</div>\r\n    </div>\r\n}\r\n\r\nexport default Likes","import React, { useState, useEffect, useCallback, useContext } from 'react'\r\nimport Linkify from 'react-linkify'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport Like from '../components/Like'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nimport '../components/css/LinkButton.css'\r\n\r\nconst Post = props => {\r\n    const maxCharacters = 512\r\n\r\n    const [userData] = useContext(UserContext)\r\n\r\n    const { postID, isExpanded, isProfile, expandPost, refreshIndex, setRefreshIndex } = props\r\n    const [postData, setPostData] = useState(null)\r\n\r\n    const [totalLikes, setTotalLikes] = useState(null)\r\n    const [isUserLiked, setIsUserLiked] = useState(null)\r\n    const [totalComments, setTotalComments] = useState(null)\r\n\r\n    const [isEditMode, setIsEditMode] = useState(false)\r\n    const [editInput, setEditInput] = useState(\"\")\r\n    const [characterCounter, setCharacterCounter] = useState(maxCharacters)\r\n\r\n    const [isPostDeleted, setIsPostDeleted] = useState(false)\r\n\r\n    const expandPostClicked = e => {\r\n        if (isEditMode || isExpanded)\r\n            return\r\n\r\n        if (e.target && e.target.tagName && e.target.tagName.toLowerCase() !== \"a\")\r\n            expandPost(postID)\r\n    }\r\n\r\n    const refreshPost = useCallback((forcedRefresh) => {\r\n        if (postID === null)\r\n            return\r\n\r\n        axios.get(`${process.env.REACT_APP_API_URL}/api/post`,\r\n            { params: { ID: postID }, headers: { Authorization: userData.token } })\r\n            .then(res => {\r\n                setPostData(res.data.post)\r\n                setTotalLikes(res.data.totalLikes)\r\n                setTotalComments(res.data.totalComments)\r\n                setIsUserLiked(res.data.isUserLiked)\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.notFound) {\r\n                    if (forcedRefresh) {\r\n                        setIsPostDeleted(true)\r\n                        setPostData(null)\r\n                    }\r\n                    else {\r\n                        toast.error(\"Post not found\")\r\n                    }\r\n                }\r\n                else {\r\n                    toast.error(\"Sorry, an error occured\")\r\n                }\r\n            })\r\n    }, [postID, userData])\r\n\r\n    const handleInput = e => {\r\n        let text = e.target.value\r\n\r\n        if (text.length > maxCharacters)\r\n            text = text.substr(0, maxCharacters)\r\n\r\n        setCharacterCounter(maxCharacters - text.length)\r\n        setEditInput(text)\r\n    }\r\n\r\n    const startEdit = () => {\r\n        const text = postData && postData.post ? postData.post : \"\"\r\n        setEditInput(text)\r\n        setIsEditMode(true)\r\n        setCharacterCounter(maxCharacters - text.length)\r\n    }\r\n\r\n    const cancelEdit = () => {\r\n        setEditInput(\"\")\r\n        setIsEditMode(false)\r\n        setCharacterCounter(maxCharacters)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!postData && !isPostDeleted && postID !== null)\r\n            refreshPost()\r\n    }, [refreshPost, postData, isPostDeleted, postID])\r\n\r\n    useEffect(() => {\r\n        if (!isPostDeleted && refreshIndex === postID) {\r\n            refreshPost(true)\r\n            setRefreshIndex(null)\r\n        }\r\n    }, [refreshIndex, postID, refreshPost, setRefreshIndex, isPostDeleted])\r\n\r\n    const deletePost = () => {\r\n        if (window.confirm(\"Are you sure you would like to delete this post?\")) {\r\n            axios.delete(`${process.env.REACT_APP_API_URL}/api/post`,\r\n                { data: { ID: postID }, headers: { Authorization: userData.token } })\r\n                .then(() => {\r\n                    setIsPostDeleted(true)\r\n                    setPostData(null)\r\n\r\n                    if (props.onDelete)\r\n                        props.onDelete()\r\n                })\r\n                .catch(err => {\r\n                    if (err && err.response && err.response.data && err.response.data.error)\r\n                        toast.error(err.response.data.error)\r\n                    else\r\n                        toast.error(\"Sorry, an error occured\")\r\n                })\r\n        }\r\n    }\r\n\r\n    const saveEdit = () => {\r\n        axios.patch(`${process.env.REACT_APP_API_URL}/api/post`,\r\n            { ID: postID, Post: editInput }, { headers: { Authorization: userData.token } })\r\n            .then(() => {\r\n                cancelEdit()\r\n                refreshPost()\r\n\r\n                if (props.onEdit)\r\n                    props.onEdit()\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }\r\n\r\n    return <>\r\n        {postData ?\r\n            <div className=\"card\" style={{ margin: \"1rem auto\", overflowX: \"auto\" }}>\r\n                {(userData.userID === postData.userID || userData.access === \"Admin\") &&\r\n                    <div style={{ position: \"absolute\", top: \"0.25rem\", right: \"0.25rem\", fontSize: \"0.7rem\" }}>\r\n                        {isEditMode ?\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                <div className=\"LinkButton\" onClick={cancelEdit}>Cancel</div>\r\n                                <div style={{ width: \"0.5rem\" }}></div>\r\n                                <div className=\"LinkButton\" onClick={saveEdit} style={{ fontWeight: 700 }}>Save</div>\r\n                            </div>\r\n                            :\r\n                            <div className=\"LinkButton\" onClick={startEdit}>Edit</div>\r\n                        }\r\n                    </div>\r\n                }\r\n                <div className=\"card-content\" style={{ cursor: `${isExpanded || isEditMode ? \"auto\" : \"pointer\"}` }} onClick={expandPostClicked}>\r\n                    {isEditMode ?\r\n                        <>\r\n                            <div className=\"LinkButton-Danger\" onClick={deletePost} style={{ position: \"absolute\", top: \"0.25rem\", left: \"0.25rem\", fontSize: \"0.7rem\" }}>Delete</div>\r\n                            <textarea onChange={handleInput} value={editInput} className=\"textarea\" />\r\n                            <div style={{ float: \"right\", color: \"lightgray\" }} >Remaining characters: {characterCounter}</div>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            {isExpanded ?\r\n                                <div style={{ whiteSpace: \"pre-wrap\" }}>\r\n                                    <Linkify>{postData.post}</Linkify>\r\n                                </div>\r\n                                :\r\n                                <div style={{ whiteSpace: \"pre-wrap\" }}>\r\n                                    <Linkify>{postData.post}</Linkify>\r\n                                </div>\r\n                            }\r\n                        </>\r\n                    }\r\n                </div>\r\n                <div className=\"card-footer\" style={{ justifyContent: \"space-between\", fontSize: \"0.7rem\", color: \"gray\", padding: \"1rem\" }}>\r\n                    <div>\r\n                        <div>{`${postData.date}${postData.isEdited ? \" (Edited)\" : \"\"}`}</div>\r\n                        {isProfile ?\r\n                            <div>{`${postData.username}`}</div>\r\n                            :\r\n                            <div className=\"LinkButton\"><Link to={`/p/${postData.username}`}>{`${postData.username}`}</Link></div>\r\n                        }\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Like\r\n                            postID={postID}\r\n                            totalLikes={totalLikes}\r\n                            isUserLiked={isUserLiked}\r\n                            refresh={refreshPost}\r\n                        />\r\n                        {!isExpanded &&\r\n                            <div className=\"LinkButton\" style={{ width: \"5.5rem\" }} onClick={expandPostClicked}>{`Comments${totalComments && totalComments > 0 ? ` (${totalComments})` : \"\"}`}</div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            :\r\n            <>\r\n                {isPostDeleted ?\r\n                    null\r\n                    :\r\n                    <div className=\"card\" style={{ margin: \"1rem auto\" }}>\r\n                        <div className=\"card-content\">\r\n                            <progress className=\"progress is-small is-light\" max=\"100\"></progress>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n\r\n        }\r\n    </>\r\n}\r\n\r\nexport default Post","import React, { useState, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nconst CommentPostBox = props => {\r\n    const { postID, refreshComments } = props\r\n    const [userData] = useContext(UserContext)\r\n\r\n    const [inputText, setInputText] = useState(\"\")\r\n\r\n    const handlePost = () => {\r\n        axios.post(`${process.env.REACT_APP_API_URL}/api/comments`,\r\n            { Comment: inputText, PostID: postID },\r\n            {\r\n                headers: { Authorization: userData.token }\r\n            })\r\n            .then(()=>{\r\n                setInputText(\"\")\r\n                refreshComments()\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }\r\n\r\n    return <div className=\"card\" style={{ margin: \"1rem auto\" }}>\r\n        <div className=\"card-content\">\r\n            <textarea required className=\"textarea\" value={inputText} onChange={e => setInputText(e.target.value)} placeholder=\"Comment on this post\" />\r\n            <button onClick={handlePost} className=\"button is-primary\" style={{ marginTop: \"0.5rem\" }}>Comment</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default CommentPostBox","import React, { useState, useCallback, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport Linkify from 'react-linkify'\r\nimport { Link } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nconst Comment = props => {\r\n    const { commentID, refreshComments } = props\r\n    const [userData] = useContext(UserContext)\r\n\r\n    const [commentData, setCommentData] = useState(null)\r\n\r\n    const [isEditMode, setIsEditMode] = useState(false)\r\n    const [editInput, setEditInput] = useState(\"\")\r\n\r\n    const refreshComment = useCallback(() => {\r\n        axios.get(`${process.env.REACT_APP_API_URL}/api/comments`,\r\n            { params: { CommentID: commentID } })\r\n            .then(res => {\r\n                setCommentData(res.data)\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }, [commentID])\r\n\r\n    const cancelEdit = () => {\r\n        setIsEditMode(false)\r\n        setEditInput(\"\")\r\n    }\r\n\r\n    const saveEdit = () => {\r\n        axios.patch(`${process.env.REACT_APP_API_URL}/api/comments`,\r\n            { CommentID: commentID, Comment: editInput }, { headers: { Authorization: userData.token } })\r\n            .then(() => {\r\n                refreshComment()\r\n                cancelEdit()\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }\r\n\r\n    const startEdit = () => {\r\n        const text = commentData && (commentData.comment ?? \"\")\r\n        setEditInput(text)\r\n        setIsEditMode(true)\r\n    }\r\n\r\n    const deleteComment = () => {\r\n        if (window.confirm(\"Are you sure you would like to delete this comment?\")) {\r\n            axios.delete(`${process.env.REACT_APP_API_URL}/api/comments`,\r\n                { data: { CommentID: commentID }, headers: { Authorization: userData.token } })\r\n                .then(() => {\r\n                    refreshComments()\r\n                })\r\n                .catch(err => {\r\n                    if (err && err.response && err.response.data && err.response.data.error)\r\n                        toast.error(err.response.data.error)\r\n                    else\r\n                        toast.error(\"Sorry, an error occured\")\r\n                })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!commentData)\r\n            refreshComment()\r\n    }, [commentData, refreshComment])\r\n\r\n    return <>\r\n        {commentData ?\r\n            <div className=\"card\" style={{ margin: \"1rem auto\", overflowX: \"auto\" }}>\r\n                {(userData.userID === commentData.userID || userData.access === \"Admin\") &&\r\n                    <div style={{ position: \"absolute\", top: \"0.25rem\", right: \"0.25rem\", fontSize: \"0.7rem\" }}>\r\n                        {isEditMode ?\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                <div className=\"LinkButton\" onClick={cancelEdit}>Cancel</div>\r\n                                <div style={{ width: \"0.5rem\" }}></div>\r\n                                <div className=\"LinkButton\" onClick={saveEdit} style={{ fontWeight: 700 }}>Save</div>\r\n                            </div>\r\n                            :\r\n                            <div className=\"LinkButton\" onClick={startEdit}>Edit</div>\r\n                        }\r\n                    </div>\r\n                }\r\n                <div className=\"card-content\">\r\n                    <div style={{ whiteSpace: \"pre-wrap\" }}>\r\n                        {isEditMode ?\r\n                            <>\r\n                                <div className=\"LinkButton-Danger\" onClick={deleteComment} style={{ position: \"absolute\", top: \"0.25rem\", left: \"0.25rem\", fontSize: \"0.7rem\" }}>Delete</div>\r\n                                <textarea onChange={e => setEditInput(e.target.value)} value={editInput} className=\"textarea\" />\r\n                            </>\r\n                            :\r\n                            <Linkify>\r\n                                {`${commentData.comment}`}\r\n                            </Linkify>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-footer\" style={{ justifyContent: \"space-between\", fontSize: \"0.7rem\", color: \"gray\", padding: \"1rem\" }}>\r\n                    <div>\r\n                        <div>{`${commentData.date}${commentData.isEdited ? \" (Edited)\" : \"\"}`}</div>\r\n                        <div className=\"LinkButton\"><Link to={`/p/${commentData.username}`}>{`${commentData.username}`}</Link></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            :\r\n            <div className=\"card\" style={{ margin: \"1rem auto\" }}>\r\n                <div className=\"card-content\">\r\n                    <progress className=\"progress is-small is-light\" max=\"100\"></progress>\r\n                </div>\r\n            </div>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default Comment","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nimport Post from '../components/Post'\r\nimport CommentPostBox from '../components/CommentPostBox'\r\nimport Comment from '../components/Comment'\r\n\r\nconst ExpandedPost = props => {\r\n    const { postID, onPostDelete } = props\r\n    const [userData] = useContext(UserContext)\r\n\r\n    const [commentIDs, setCommentIDs] = useState(null)\r\n\r\n    const refreshComments = useCallback(() => {\r\n        if (postID === null)\r\n            return\r\n\r\n        axios.get(`${process.env.REACT_APP_API_URL}/api/comments/list`,\r\n            { params: { PostID: postID } })\r\n            .then(res => {\r\n                setCommentIDs(res.data)\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }, [postID])\r\n\r\n    useEffect(() => {\r\n        if (!commentIDs)\r\n            refreshComments()\r\n    }, [commentIDs, refreshComments])\r\n\r\n    return <div style={{overflowX: \"hidden\"}}>\r\n        <Post\r\n            postID={postID}\r\n            isExpanded\r\n            onDelete={onPostDelete}\r\n        />\r\n        {userData.isLoggedIn &&\r\n            <CommentPostBox\r\n                postID={postID}\r\n                refreshComments={refreshComments}\r\n            />}\r\n        {commentIDs && commentIDs.length > 0 &&\r\n            <div style={{ width: \"40rem\", margin: \"1rem auto\", fontWeight: 600, color: \"gray\", paddingLeft: \"2rem\" }} >Comments</div>\r\n        }\r\n        {commentIDs &&\r\n            commentIDs.map(commentID => <Comment\r\n                key={commentID}\r\n                commentID={commentID}\r\n                refreshComments={refreshComments}\r\n            />)\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default ExpandedPost","import React from 'react'\r\nimport Modal from 'react-modal'\r\n\r\nimport ExpandedPost from '../components/ExpandedPost'\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst PostModal = props => {\r\n    const { isOpen, closeModal, postID } = props\r\n\r\n    const onPostDelete = () => {\r\n        closeModal()\r\n    }\r\n\r\n    return <Modal\r\n        isOpen={isOpen}\r\n        onRequestClose={closeModal}\r\n        style={{\r\n            content: {\r\n                padding: \"1rem 0 1rem 0\",\r\n                maxWidth: \"60rem\",\r\n                margin: \"auto\",\r\n                top: \"0.5rem\",\r\n                bottom: \"0.5rem\",\r\n                left: \"1.75rem\",\r\n                right: \"1.75rem\"\r\n            },\r\n            overlay: {\r\n                zIndex: 35,\r\n                backgroundColor: \"rgba(128, 128, 128, 0.7)\"\r\n            }\r\n        }}\r\n    >\r\n        <div className=\"container\">\r\n            <ExpandedPost\r\n            postID={postID}\r\n            onPostDelete={onPostDelete} />\r\n        </div>\r\n    </Modal>\r\n}\r\n\r\nexport default PostModal","import React, { useEffect, useState, useContext, useCallback, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport noScroll from 'no-scroll'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nimport WaitOnWake from '../components/WaitOnWake'\r\nimport PostBox from '../components/PostBox'\r\nimport Post from '../components/Post'\r\nimport PostModal from '../components/PostModal'\r\n\r\nconst Home = props => {\r\n    const [userData] = useContext(UserContext)\r\n\r\n    const [postIDs, setPostIDs] = useState(null)\r\n\r\n    const [isPostModalVisible, setIsPostModalVisible] = useState(false)\r\n    const [selectedPostID, setSelectedPostID] = useState(null)\r\n    const [refreshIndex, setRefreshIndex] = useState(null)\r\n\r\n    const getPostIDs = useRef()\r\n    const isFetching = useRef(false)\r\n    getPostIDs.current = () => { return postIDs }\r\n\r\n    const refreshPosts = useCallback(() => {\r\n        axios.get(`${process.env.REACT_APP_API_URL}/api/home/posts`,\r\n            { params: { LastID: null } })\r\n            .then(res => setPostIDs(res.data))\r\n            .catch(() => setTimeout(refreshPosts, 500))\r\n    }, [])\r\n\r\n    const getMorePosts = useCallback(() => {\r\n        const posts = getPostIDs.current()\r\n\r\n        if (!posts || posts.length < 1)\r\n            return\r\n\r\n        const lastID = posts[posts.length - 1]\r\n\r\n        if (lastID <= 1)\r\n            return\r\n\r\n        isFetching.current = true\r\n        axios.get(`${process.env.REACT_APP_API_URL}/api/home/posts`,\r\n            { params: { lastID } })\r\n            .then(res => setPostIDs([...postIDs, ...res.data]))\r\n            .catch(() => toast.error(\"Sorry, something went wrong\"))\r\n            .finally(() => isFetching.current = false)\r\n    }, [postIDs])\r\n\r\n    const closePostModal = () => {\r\n        setIsPostModalVisible(false)\r\n        setRefreshIndex(selectedPostID)\r\n        setSelectedPostID(null)\r\n        window.history.pushState(null, null, '/')\r\n    }\r\n\r\n    const openPostModal = postID => {\r\n        setSelectedPostID(postID)\r\n        setIsPostModalVisible(true)\r\n        window.history.pushState(null, null, `/wh/${postID}`)\r\n    }\r\n\r\n    const handleScroll = useCallback(e => {\r\n        if (!isFetching.current && window.innerHeight + document.documentElement.scrollTop + 200 >= document.documentElement.offsetHeight)\r\n            getMorePosts()\r\n    }, [getMorePosts])\r\n\r\n    useEffect(() => {\r\n        if (!postIDs)\r\n            refreshPosts()\r\n    }, [postIDs, refreshPosts])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll)\r\n        return () => window.removeEventListener('scroll', handleScroll)\r\n    }, [handleScroll])\r\n\r\n    useEffect(() => { // Trigger infinite scroll if non enough height for a scrollbar\r\n        if (postIDs && postIDs.length > 0 && window.innerHeight > document.documentElement.offsetHeight)\r\n            handleScroll()\r\n    }, [postIDs, handleScroll])\r\n\r\n    useEffect(() => {\r\n        if (isPostModalVisible)\r\n            noScroll.on()\r\n        else\r\n            noScroll.off()\r\n\r\n        return () => noScroll.off()\r\n    }, [isPostModalVisible])\r\n\r\n    return <>\r\n        {postIDs !== null ?\r\n            <>\r\n                <div className=\"container\">\r\n                    <>\r\n                        {userData.isLoggedIn &&\r\n                            <PostBox refreshPosts={refreshPosts} />\r\n                        }\r\n                        {postIDs &&\r\n                            postIDs.map(postID => <Post\r\n                                key={postID}\r\n                                postID={postID}\r\n                                expandPost={openPostModal}\r\n                                refreshIndex={refreshIndex}\r\n                                setRefreshIndex={setRefreshIndex}\r\n                            />)\r\n                        }\r\n                    </>\r\n                </div>\r\n                <PostModal\r\n                    isOpen={isPostModalVisible}\r\n                    closeModal={closePostModal}\r\n                    postID={selectedPostID}\r\n                />\r\n            </>\r\n            :\r\n            <WaitOnWake />\r\n        }\r\n    </>\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\n\r\nimport ExpandedPost from '../components/ExpandedPost'\r\n\r\nconst PostPage = props => {\r\n    const history = useHistory()\r\n    const { postID } = useParams()\r\n\r\n    const postDeleted = () => {\r\n        history.push(\"/\")\r\n    }\r\n\r\n    return <div className=\"container\">\r\n        <ExpandedPost postID={postID} onPostDelete={postDeleted} />\r\n    </div>\r\n}\r\n\r\nexport default PostPage","import React, { useEffect, useState, useCallback } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport axios from 'axios'\r\nimport noScroll from 'no-scroll'\r\n\r\nimport Post from '../components/Post'\r\nimport PostModal from '../components/PostModal'\r\n\r\nconst Profile = props => {\r\n    const { username } = useParams()\r\n    const [profileData, setProfileData] = useState(null)\r\n    const [postIDs, setPostIDs] = useState(null)\r\n\r\n    const [isPostModalVisible, setIsPostModalVisible] = useState(false)\r\n    const [selectedPostID, setSelectedPostID] = useState(null)\r\n    const [refreshIndex, setRefreshIndex] = useState(null)\r\n\r\n    const refreshPosts = useCallback(() => {\r\n        axios.get(`${process.env.REACT_APP_API_URL}/api/profile/posts`,\r\n            { params: { UserID: profileData.userID } })\r\n            .then(res => setPostIDs(res.data))\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }, [profileData])\r\n\r\n    const closePostModal = () => {\r\n        setIsPostModalVisible(false)\r\n        setRefreshIndex(selectedPostID)\r\n        setSelectedPostID(null)\r\n        window.history.pushState(null, null, `/p/${username}`)\r\n    }\r\n\r\n    const openPostModal = postID => {\r\n        setSelectedPostID(postID)\r\n        setIsPostModalVisible(true)\r\n        window.history.pushState(null, null, `/wh/${postID}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${process.env.REACT_APP_API_URL}/api/profile/user`,\r\n            { params: { Username: username } })\r\n            .then(res => setProfileData(res.data))\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }, [username])\r\n\r\n    useEffect(() => {\r\n        if (profileData) {\r\n            refreshPosts()\r\n        }\r\n    }, [profileData, refreshPosts])\r\n\r\n    useEffect(() => {\r\n        if (isPostModalVisible)\r\n            noScroll.on()\r\n        else\r\n            noScroll.off()\r\n            \r\n        return () => noScroll.off()\r\n    }, [isPostModalVisible])\r\n\r\n    return <>\r\n        <div className=\"container\">\r\n            {profileData &&\r\n                <>\r\n                    <h5 style={{ textAlign: \"center\" }} className=\"title\">{`${profileData.username}'s Posts`}</h5>\r\n                    <>\r\n                        {profileData.access !== \"User\" &&\r\n                            <h5 style={{ textAlign: \"center\" }} className=\"subtitle\">{profileData.access}</h5>\r\n                        }\r\n                    </>\r\n                </>\r\n            }\r\n            {postIDs &&\r\n                postIDs.map(postID => <Post\r\n                    key={postID}\r\n                    postID={postID}\r\n                    expandPost={openPostModal}\r\n                    refreshIndex={refreshIndex}\r\n                    setRefreshIndex={setRefreshIndex}\r\n                    isProfile\r\n                />)\r\n            }\r\n        </div>\r\n        <PostModal\r\n            isOpen={isPostModalVisible}\r\n            closeModal={closePostModal}\r\n            postID={selectedPostID}\r\n            refresh={refreshPosts}\r\n        />\r\n    </>\r\n}\r\n\r\nexport default Profile","import React, { useState, useContext } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios'\r\n\r\nimport UserContext from '../UserContext'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst Settings = props => {\r\n    const [userData] = useContext(UserContext)\r\n\r\n    const [currentPassword, setCurrentPassword] = useState(\"\")\r\n    const [newPassword, setNewPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    const [isCurrentPasswordVisible, setIsCurrentPasswordVisible] = useState(false)\r\n    const [isNewPasswordVisible, setIsNewPasswordVisible] = useState(false)\r\n    const [isConfirmPasswordVisible, setIsConfirmPasswordVisible] = useState(false)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        axios.patch(`${process.env.REACT_APP_API_URL}/api/settings/password`,\r\n            { Current: currentPassword, New: newPassword, Confirm: confirmPassword }, { headers: { Authorization: userData.token } })\r\n            .then(() => {\r\n                toast.info(\"Password updated\")\r\n                setCurrentPassword(\"\")\r\n                setNewPassword(\"\")\r\n                setConfirmPassword(\"\")\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }\r\n\r\n    return <>\r\n        {userData.isLoggedIn ?\r\n            <div className=\"container\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-title\">\r\n                        <h1>Update Password</h1>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <label htmlFor=\"current-password\" className=\"label\">Current Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded\">\r\n                                    <input value={currentPassword} onChange={e => setCurrentPassword(e.target.value)} className=\"input\" name=\"current-password\" type={isCurrentPasswordVisible ? \"input\" : \"password\"} placeholder=\"Current Password\" required />\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsCurrentPasswordVisible(!isCurrentPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isCurrentPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <label htmlFor=\"new-password\" className=\"label\">New Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded\">\r\n                                    <input value={newPassword} onChange={e => setNewPassword(e.target.value)} className=\"input\" name=\"new-password\" type={isNewPasswordVisible ? \"input\" : \"password\"} placeholder=\"New Password\" required />\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsNewPasswordVisible(!isNewPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isNewPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <label htmlFor=\"confirm-password\" className=\"label\">Confirm Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded\">\r\n                                    <input value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} className=\"input\" name=\"confirm-password\" type={isConfirmPasswordVisible ? \"input\" : \"password\"} placeholder=\"Confirm Password\" required />\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsConfirmPasswordVisible(!isConfirmPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isConfirmPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <p className=\"control\">\r\n                                    <button type=\"submit\" className=\"button is-primary\">Update</button>\r\n                                </p>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            :\r\n            <div className=\"container\">\r\n                Please log in or create an account to view this page.\r\n        </div>}\r\n    </>\r\n}\r\n\r\nexport default Settings","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faLock, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\r\nimport { toast } from 'react-toastify'\r\nimport { useCookies } from 'react-cookie'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport './css/LoginRegister.css'\r\n\r\nconst Register = props => {\r\n    const [isPasswordVisible, setIsPasswordVisible] = useState(false)\r\n    const [isConfirmPasswordVisible, setIsConfirmPasswordVisible] = useState(false)\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    const [, setCookie] = useCookies(['token'])\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        axios.post(`${process.env.REACT_APP_API_URL}/api/register`, { username, password, Confirm: confirmPassword })\r\n            .then(res => {\r\n                setCookie('token', res.data.jwt)\r\n                setRedirect(true)\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }\r\n\r\n    if (redirect)\r\n        return <Redirect to=\"/\" />\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-title\">\r\n                        <h1>Registration</h1>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <label htmlFor=\"username\" className=\"label\">Username</label>\r\n                            <div className=\"field\">\r\n                                <p className=\"control has-icons-left\">\r\n                                    <input value={username} onChange={e => setUsername(e.target.value)} className=\"input\" type=\"text\" name=\"username\" placeholder=\"Username\" autoFocus required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <FontAwesomeIcon icon={faUser} />\r\n                                    </span>\r\n                                </p>\r\n                            </div>\r\n                            <label htmlFor=\"password\" className=\"label\">Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded has-icons-left\">\r\n                                    <input value={password} onChange={e => setPassword(e.target.value)} className=\"input\" name=\"password\" type={isPasswordVisible ? \"input\" : \"password\"} placeholder=\"Password\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <FontAwesomeIcon icon={faLock} />\r\n                                    </span>\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsPasswordVisible(!isPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <label htmlFor=\"confirm-password\" className=\"label\">Confirm Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded has-icons-left\">\r\n                                    <input value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} className=\"input\" name=\"confirm-password\" type={isConfirmPasswordVisible ? \"input\" : \"password\"} placeholder=\"Confirm Password\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <FontAwesomeIcon icon={faLock} />\r\n                                    </span>\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsConfirmPasswordVisible(!isConfirmPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isConfirmPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <p className=\"control\">\r\n                                    <button type=\"submit\" className=\"button is-primary\">Register</button>\r\n                                </p>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Register","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faLock, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\r\nimport { toast } from 'react-toastify'\r\nimport { useCookies } from 'react-cookie'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst Login = props => {\r\n    const [isPasswordVisible, setIsPasswordVisible] = useState(false)\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const [, setCookie] = useCookies(['token'])\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        axios.post(`${process.env.REACT_APP_API_URL}/api/login`, { username, password })\r\n            .then(res => {\r\n                if (res.data.error) {\r\n                    toast.error(res.data.error)\r\n                    return\r\n                }\r\n\r\n                setCookie('token', res.data.jwt)\r\n                setRedirect(true)\r\n            })\r\n            .catch()\r\n    }\r\n\r\n    if (redirect)\r\n        return <Redirect to=\"/\" />\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-title\">\r\n                        <h1>Login</h1>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <label htmlFor=\"username\" className=\"label\">Username</label>\r\n                            <div className=\"field\">\r\n                                <p className=\"control has-icons-left\">\r\n                                    <input value={username} onChange={e => setUsername(e.target.value)} className=\"input\" type=\"text\" name=\"username\" placeholder=\"Username\" autoFocus required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <FontAwesomeIcon icon={faUser} />\r\n                                    </span>\r\n                                </p>\r\n                            </div>\r\n                            <label htmlFor=\"password\" className=\"label\">Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded has-icons-left\">\r\n                                    <input value={password} onChange={e => setPassword(e.target.value)} className=\"input\" name=\"password\" type={isPasswordVisible ? \"input\" : \"password\"} placeholder=\"Password\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <FontAwesomeIcon icon={faLock} />\r\n                                    </span>\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsPasswordVisible(!isPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <p className=\"control\">\r\n                                    <button type=\"submit\" className=\"button is-primary\">Log In</button>\r\n                                </p>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Login","import React, { useEffect, useState, useRef } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { withCookies } from 'react-cookie'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst Logout = ({ cookies, ...props }) => {\r\n    const cookieState = useRef(document.cookie)\r\n    const [cookieCleared, setCookieCleared] = useState(false)\r\n\r\n    useEffect(() => {\r\n        cookies.remove('token')\r\n    }, [cookies])\r\n\r\n    useEffect(() => {\r\n        if (cookies.get('token'))\r\n            cookies.remove('token')\r\n        else\r\n            setCookieCleared(true)\r\n    }, [cookieState, cookies])\r\n\r\n    useEffect(() => {\r\n        if (cookieCleared)\r\n            toast.info(\"You have been logged out\")\r\n    }, [cookieCleared])\r\n\r\n    return <>\r\n        {cookieCleared ?\r\n            <Redirect to=\"/\" />\r\n            :\r\n            <>\r\n                <div>\r\n                    Logging out...\r\n                </div>\r\n                <div style={{ fontSize: \"0.8rem\", color: \"gray\" }}>\r\n                    Refresh if this gets stuck, sorry\r\n                </div>\r\n            </>}\r\n    </>\r\n}\r\n\r\nexport default withCookies(Logout)","import React from 'react'\r\n\r\nconst Error404 = props =>\r\n    <div className=\"container\">\r\n        <h1 className=\"title\">\r\n            404\r\n      </h1>\r\n        <p className=\"subtitle\">\r\n            Nothing was found at this location\r\n      </p>\r\n    </div>\r\n\r\nexport default Error404","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nimport './css/NavBar.css'\r\n\r\nconst NavBar = () => {\r\n    const [userData] = useContext(UserContext)\r\n    const [isActive, setIsActive] = useState(false)\r\n    const [isUsernameDropdownActive, setIsUsernameDropdownActive] = useState(false)\r\n\r\n    const handleClick = useCallback(e => {\r\n        if (isUsernameDropdownActive)\r\n            setIsUsernameDropdownActive(false)\r\n    }, [isUsernameDropdownActive])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('click', handleClick)\r\n        return () => window.removeEventListener('click', handleClick)\r\n    }, [handleClick])\r\n\r\n    return (\r\n        <nav style={{ marginBottom: \"1rem\" }} className=\"navbar is-dark\" role=\"navigation\" aria-label=\"main navigation\">\r\n            <div className=\"navbar-brand\">\r\n                <Link className=\"navbar-item NavBar-brand\" to=\"/\">Word Hole</Link>\r\n                <div onClick={() => setIsActive(!isActive)} role=\"button\" className={`${isActive ? \"is-active\" : \"\"} navbar-burger`} aria-label=\"menu\" aria-expanded=\"false\">\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`${isActive ? \"is-active\" : \"\"} navbar-menu`}>\r\n                <div className=\"navbar-end\">\r\n                    {userData.isLoggedIn ?\r\n                        <div id={\"navbar-username-dropdown-button\"} className={`navbar-item has-dropdown ${isUsernameDropdownActive ? \"is-active\" : \"\"}`}>\r\n                            <div className=\"navbar-link\" onClick={() => setIsUsernameDropdownActive(!isUsernameDropdownActive)}>\r\n                                {userData.username}\r\n                            </div>\r\n\r\n                            <div className=\"navbar-dropdown\">\r\n                                <Link className=\"navbar-item\" to={`/p/${userData.username}`}>Profile</Link>\r\n                                <Link className=\"navbar-item\" to={`/settings`}>Settings</Link>\r\n                                <hr className=\"navbar-divider\" />\r\n                                <Link className=\"navbar-item\" to={\"/logout\"}>Log Out</Link>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div className=\"navbar-item\">\r\n                            <div className=\"buttons\">\r\n                                <Link className=\"button is-dark\" to={\"/register\"}>Register</Link>\r\n                                <Link className=\"button is-primary\" to={\"/login\"}><strong>Log In</strong></Link>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </nav >\r\n    )\r\n}\r\n\r\nexport default NavBar","import React, { useContext, useEffect, useCallback } from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\n// Handles setting globals for logins\r\nconst LoginWatcher = ({ cookies }) => {\r\n    const cookieState = document.cookie\r\n    const [, globalSetIsLoggedIn, globalSetUsername, globalSetUserID, globalSetAccess, globalSetToken] = useContext(UserContext)\r\n\r\n    const clearGlobals = useCallback(() => {\r\n        globalSetIsLoggedIn(false)\r\n        globalSetUsername(\"\")\r\n        globalSetUserID(null)\r\n        globalSetAccess(\"User\")\r\n        globalSetToken(null)\r\n    }, [globalSetIsLoggedIn, globalSetUsername, globalSetUserID, globalSetAccess, globalSetToken])\r\n\r\n    useEffect(() => {\r\n        const cookieToken = cookies.get('token')\r\n\r\n        if (cookieToken) {\r\n            const token = jwt_decode(cookieToken)\r\n            if (token.exp > (Date.now() / 1000)) {\r\n                globalSetIsLoggedIn(true)\r\n                globalSetUsername(token[\"Username\"])\r\n                globalSetUserID(Number(token[\"UserID\"]))\r\n                globalSetAccess(token[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"])\r\n                globalSetToken(cookieToken)\r\n            } else {\r\n                cookies.remove('token')\r\n                clearGlobals()\r\n            }\r\n        } else {\r\n            clearGlobals()\r\n        }\r\n    }, [cookies, cookieState, globalSetIsLoggedIn, globalSetUsername, globalSetUserID, globalSetAccess, globalSetToken, clearGlobals])\r\n\r\n    return <></>\r\n}\r\n\r\nexport default withCookies(LoginWatcher)","import React from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport { UserProvider } from './UserContext'\r\n\r\nimport Home from './pages/Home'\r\nimport PostPage from './pages/PostPage'\r\nimport Profile from './pages/Profile'\r\nimport Settings from './pages/Settings'\r\nimport Register from './pages/Register'\r\nimport Login from './pages/Login'\r\nimport Logout from './pages/Logout'\r\nimport Error404 from './pages/Error404'\r\n\r\nimport NavBar from './components/NavBar'\r\nimport LoginWatcher from './components/LoginWatcher'\r\n\r\ntoast.configure({\r\n  hideProgressBar: true,\r\n  newestOnTop: true,\r\n  autoClose: 3000\r\n})\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <UserProvider>\r\n        <LoginWatcher />\r\n        <NavBar />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/wh/:postID\" exact component={PostPage} />\r\n          <Route path=\"/p/:username\" exact component={Profile} />\r\n          <Route path=\"/settings\" exact component={Settings} />\r\n          <Route path=\"/register\" exact component={Register} />\r\n          <Route path=\"/login\" exact component={Login} />\r\n          <Route path=\"/logout\" exact component={Logout} />\r\n          <Route component={Error404} />\r\n        </Switch>\r\n      </UserProvider>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'bulma/css/bulma.css'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}