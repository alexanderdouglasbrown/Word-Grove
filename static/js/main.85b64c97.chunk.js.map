{"version":3,"sources":["UserContext.js","components/PostBox.js","components/Like.js","components/Post.js","components/CommentPostBox.js","components/Comment.js","components/ExpandedPost.js","components/PostModal.js","pages/Home.js","pages/PostPage.js","pages/Profile.js","pages/Settings.js","pages/Register.js","pages/Login.js","pages/Logout.js","pages/Error404.js","components/NavBar.js","components/WaitOnWake.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","UserProvider","props","useState","isLoggedIn","setIsLoggedIn","username","setUsername","userID","setUserID","access","setAccess","window","localStorage","getItem","token","setToken","clearUser","removeItem","axios","defaults","headers","common","useEffect","decodedToken","jwt_decode","exp","Date","now","Number","setItem","Provider","value","children","PostBox","maxCharacters","inputText","setInputText","characterCounter","setCharacterCounter","className","style","margin","required","onChange","e","text","target","length","substr","placeholder","onClick","post","Post","then","refreshPosts","catch","toast","error","marginTop","float","color","Likes","useContext","userData","postID","totalLikes","isUserLiked","refresh","deleteLike","delete","data","PostID","addLike","put","display","justifyContent","alignItems","width","cursor","icon","faSolidHeart","faHeart","info","marginLeft","fontWeight","isExpanded","isProfile","expandPost","refreshIndex","setRefreshIndex","postData","setPostData","setTotalLikes","setIsUserLiked","totalComments","setTotalComments","isEditMode","setIsEditMode","editInput","setEditInput","isPostDeleted","setIsPostDeleted","expandPostClicked","tagName","toLowerCase","refreshPost","useCallback","forcedRefresh","get","params","ID","res","err","response","notFound","cancelEdit","overflowX","position","top","right","fontSize","patch","onEdit","confirm","onDelete","left","whiteSpace","padding","date","isEdited","to","Like","max","CommentPostBox","refreshComments","Comment","commentID","commentData","setCommentData","refreshComment","CommentID","comment","ExpandedPost","onPostDelete","commentIDs","setCommentIDs","paddingLeft","map","Modal","setAppElement","PostModal","isOpen","closeModal","onRequestClose","content","maxWidth","bottom","overlay","zIndex","backgroundColor","Home","postIDs","setPostIDs","isPostModalVisible","setIsPostModalVisible","selectedPostID","setSelectedPostID","getPostIDs","useRef","isFetching","current","LastID","setTimeout","getMorePosts","posts","lastID","finally","openPostModal","history","pushState","handleScroll","innerHeight","document","documentElement","scrollTop","offsetHeight","addEventListener","removeEventListener","noScroll","on","off","PostPage","useHistory","useParams","push","Profile","profileData","setProfileData","UserID","Username","textAlign","Settings","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","isCurrentPasswordVisible","setIsCurrentPasswordVisible","isNewPasswordVisible","setIsNewPasswordVisible","isConfirmPasswordVisible","setIsConfirmPasswordVisible","onSubmit","preventDefault","Current","New","Confirm","htmlFor","name","type","faEye","faEyeSlash","Register","isPasswordVisible","setIsPasswordVisible","password","setPassword","jwt","autoFocus","faUser","faLock","Login","Logout","Error404","NavBar","isActive","setIsActive","isUsernameDropdownActive","setIsUsernameDropdownActive","handleClick","marginBottom","role","aria-label","aria-expanded","aria-hidden","id","WaitOnWake","isVisible","setIsVisible","setIsServerAwake","pingServer","configure","hideProgressBar","newestOnTop","autoClose","App","isServerAwake","path","exact","component","Boolean","location","hostname","match","baseURL","process","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.85b64c97.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\r\nimport jwt_decode from 'jwt-decode'\r\nimport axios from 'axios'\r\n\r\nconst UserContext = createContext()\r\n\r\nexport const UserProvider = props => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n    const [username, setUsername] = useState(\"\")\r\n    const [userID, setUserID] = useState(null)\r\n    const [access, setAccess] = useState(\"User\")\r\n    const [token, setToken] = useState(window.localStorage.getItem('token'))\r\n\r\n    const clearUser = () => {\r\n        setIsLoggedIn(false)\r\n        setUsername(\"\")\r\n        setUserID(null)\r\n        setAccess(\"User\")\r\n        setToken(null)\r\n\r\n        window.localStorage.removeItem('token')\r\n        axios.defaults.headers.common['Authorization'] = null;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            const decodedToken = jwt_decode(token)\r\n            if (decodedToken.exp > (Date.now() / 1000)) {\r\n                axios.defaults.headers.common['Authorization'] = token;\r\n\r\n                setIsLoggedIn(true)\r\n                setUsername(decodedToken[\"Username\"])\r\n                setUserID(Number(decodedToken[\"UserID\"]))\r\n                setAccess(decodedToken[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"])\r\n\r\n                if (window.localStorage.getItem('token') !== token)\r\n                    window.localStorage.setItem('token', token)\r\n            } else {\r\n                clearUser()\r\n            }\r\n        } else {\r\n            clearUser()\r\n        }\r\n    }, [token])\r\n\r\n    return (<UserContext.Provider value={[{\r\n        isLoggedIn,\r\n        username,\r\n        userID,\r\n        access,\r\n        token\r\n    },\r\n        setToken]}>\r\n        {props.children}\r\n    </UserContext.Provider>)\r\n\r\n}\r\n\r\nexport default UserContext","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst PostBox = props => {\r\n    const maxCharacters = 512\r\n\r\n    const [inputText, setInputText] = useState(\"\")\r\n    const [characterCounter, setCharacterCounter] = useState(maxCharacters)\r\n\r\n    const handleInput = e => {\r\n        let text = e.target.value\r\n\r\n        if (text.length > maxCharacters)\r\n            text = text.substr(0, maxCharacters)\r\n\r\n        setCharacterCounter(maxCharacters - text.length)\r\n        setInputText(text)\r\n    }\r\n\r\n    const handlePost = () => {\r\n        axios.post(`/api/home/post`, { Post: inputText })\r\n            .then(() => {\r\n                setInputText(\"\")\r\n                setCharacterCounter(maxCharacters)\r\n                props.refreshPosts()\r\n            })\r\n            .catch(() => toast.error(\"Sorry, an error occurred\"))\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\" style={{ margin: \"1rem auto\" }}>\r\n            <div className=\"card-content\">\r\n                <textarea required onChange={handleInput} className=\"textarea\" placeholder=\"Put your words on Word Hole\" value={inputText} />\r\n                <button onClick={handlePost} className=\"button is-primary\" style={{ marginTop: \"0.5rem\" }}>Post</button>\r\n                <div style={{ float: \"right\", color: \"lightgray\" }} >Remaining characters: {characterCounter}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostBox","import React, { useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart as faSolidHeart } from '@fortawesome/free-solid-svg-icons'\r\nimport { faHeart } from '@fortawesome/free-regular-svg-icons'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nconst Likes = props => {\r\n    const [userData] = useContext(UserContext)\r\n    const { postID, totalLikes, isUserLiked, refresh } = props\r\n\r\n    const toggleLike = () => {\r\n        if (!userData.isLoggedIn) {\r\n            toast.info(\"Please log in to Like posts\")\r\n            return\r\n        }\r\n\r\n        if (isUserLiked)\r\n            deleteLike()\r\n        else\r\n            addLike()\r\n    }\r\n\r\n    const deleteLike = () => {\r\n        axios.delete(`/api/likes`,\r\n            { data: { PostID: postID } })\r\n            .then(() => {\r\n                refresh()\r\n            })\r\n            .catch(() => toast.error(\"Sorry, something went wrong\"))\r\n    }\r\n\r\n    const addLike = () => {\r\n        axios.put(`/api/likes`, { PostID: postID })\r\n            .then(() => {\r\n                refresh()\r\n            })\r\n            .catch(() => toast.error(\"Sorry, something went wrong\"))\r\n    }\r\n\r\n    return <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", width: \"1.5rem\" }}>\r\n        <FontAwesomeIcon style={{ marginTop: \"0.15rem\", color: \"fuchsia\", cursor: \"pointer\" }} icon={isUserLiked ? faSolidHeart : faHeart} onClick={toggleLike} />\r\n        <div style={{ marginLeft: \"0.25rem\", fontWeight: 600 }}>{`${totalLikes ? `(${totalLikes})` : \"\"}`}</div>\r\n    </div>\r\n}\r\n\r\nexport default Likes","import React, { useState, useEffect, useCallback, useContext } from 'react'\r\nimport Linkify from 'react-linkify'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport Like from '../components/Like'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nimport '../components/css/LinkButton.css'\r\n\r\nconst Post = props => {\r\n    const maxCharacters = 512\r\n\r\n    const [userData] = useContext(UserContext)\r\n\r\n    const { postID, isExpanded, isProfile, expandPost, refreshIndex, setRefreshIndex } = props\r\n    const [postData, setPostData] = useState(null)\r\n\r\n    const [totalLikes, setTotalLikes] = useState(null)\r\n    const [isUserLiked, setIsUserLiked] = useState(null)\r\n    const [totalComments, setTotalComments] = useState(null)\r\n\r\n    const [isEditMode, setIsEditMode] = useState(false)\r\n    const [editInput, setEditInput] = useState(\"\")\r\n    const [characterCounter, setCharacterCounter] = useState(maxCharacters)\r\n\r\n    const [isPostDeleted, setIsPostDeleted] = useState(false)\r\n\r\n    const expandPostClicked = e => {\r\n        if (isEditMode || isExpanded)\r\n            return\r\n\r\n        if (e.target && e.target.tagName && e.target.tagName.toLowerCase() !== \"a\")\r\n            expandPost(postID)\r\n    }\r\n\r\n    const refreshPost = useCallback((forcedRefresh) => {\r\n        if (postID === null)\r\n            return\r\n\r\n        axios.get(`/api/post`,\r\n            { params: { ID: postID } })\r\n            .then(res => {\r\n                setPostData(res.data.post)\r\n                setTotalLikes(res.data.totalLikes)\r\n                setTotalComments(res.data.totalComments)\r\n                setIsUserLiked(res.data.isUserLiked)\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.notFound) {\r\n                    if (forcedRefresh) {\r\n                        setIsPostDeleted(true)\r\n                        setPostData(null)\r\n                    }\r\n                    else {\r\n                        toast.error(\"Post not found\")\r\n                    }\r\n                }\r\n                else {\r\n                    toast.error(\"Sorry, an error occured\")\r\n                }\r\n            })\r\n    }, [postID])\r\n\r\n    const handleInput = e => {\r\n        let text = e.target.value\r\n\r\n        if (text.length > maxCharacters)\r\n            text = text.substr(0, maxCharacters)\r\n\r\n        setCharacterCounter(maxCharacters - text.length)\r\n        setEditInput(text)\r\n    }\r\n\r\n    const startEdit = () => {\r\n        const text = postData && postData.post ? postData.post : \"\"\r\n        setEditInput(text)\r\n        setIsEditMode(true)\r\n        setCharacterCounter(maxCharacters - text.length)\r\n    }\r\n\r\n    const cancelEdit = () => {\r\n        setEditInput(\"\")\r\n        setIsEditMode(false)\r\n        setCharacterCounter(maxCharacters)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!postData && !isPostDeleted && postID !== null)\r\n            refreshPost()\r\n    }, [refreshPost, postData, isPostDeleted, postID])\r\n\r\n    useEffect(() => {\r\n        if (!isPostDeleted && refreshIndex === postID) {\r\n            refreshPost(true)\r\n            setRefreshIndex(null)\r\n        }\r\n    }, [refreshIndex, postID, refreshPost, setRefreshIndex, isPostDeleted])\r\n\r\n    const deletePost = () => {\r\n        if (window.confirm(\"Are you sure you would like to delete this post?\")) {\r\n            axios.delete(`/api/post`,\r\n                { data: { ID: postID } })\r\n                .then(() => {\r\n                    setIsPostDeleted(true)\r\n                    setPostData(null)\r\n\r\n                    if (props.onDelete)\r\n                        props.onDelete()\r\n                })\r\n                .catch(err => {\r\n                    if (err && err.response && err.response.data && err.response.data.error)\r\n                        toast.error(err.response.data.error)\r\n                    else\r\n                        toast.error(\"Sorry, an error occured\")\r\n                })\r\n        }\r\n    }\r\n\r\n    const saveEdit = () => {\r\n        axios.patch(`/api/post`,\r\n            { ID: postID, Post: editInput })\r\n            .then(() => {\r\n                cancelEdit()\r\n                refreshPost()\r\n\r\n                if (props.onEdit)\r\n                    props.onEdit()\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }\r\n\r\n    return <>\r\n        {postData ?\r\n            <div className=\"card\" style={{ margin: \"1rem auto\", overflowX: \"auto\" }}>\r\n                {(userData.userID === postData.userID || userData.access === \"Admin\") &&\r\n                    <div style={{ position: \"absolute\", top: \"0.25rem\", right: \"0.25rem\", fontSize: \"0.7rem\" }}>\r\n                        {isEditMode ?\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                <div className=\"LinkButton\" onClick={cancelEdit}>Cancel</div>\r\n                                <div style={{ width: \"0.5rem\" }}></div>\r\n                                <div className=\"LinkButton\" onClick={saveEdit} style={{ fontWeight: 700 }}>Save</div>\r\n                            </div>\r\n                            :\r\n                            <div className=\"LinkButton\" onClick={startEdit}>Edit</div>\r\n                        }\r\n                    </div>\r\n                }\r\n                <div className=\"card-content\" style={{ cursor: `${isExpanded || isEditMode ? \"auto\" : \"pointer\"}` }} onClick={expandPostClicked}>\r\n                    {isEditMode ?\r\n                        <>\r\n                            <div className=\"LinkButton-Danger\" onClick={deletePost} style={{ position: \"absolute\", top: \"0.25rem\", left: \"0.25rem\", fontSize: \"0.7rem\" }}>Delete</div>\r\n                            <textarea onChange={handleInput} value={editInput} className=\"textarea\" />\r\n                            <div style={{ float: \"right\", color: \"lightgray\" }} >Remaining characters: {characterCounter}</div>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            {isExpanded ?\r\n                                <div style={{ whiteSpace: \"pre-wrap\" }}>\r\n                                    <Linkify>{postData.post}</Linkify>\r\n                                </div>\r\n                                :\r\n                                <div style={{ whiteSpace: \"pre-wrap\" }}>\r\n                                    <Linkify>{postData.post}</Linkify>\r\n                                </div>\r\n                            }\r\n                        </>\r\n                    }\r\n                </div>\r\n                <div className=\"card-footer\" style={{ justifyContent: \"space-between\", fontSize: \"0.7rem\", color: \"gray\", padding: \"1rem\" }}>\r\n                    <div>\r\n                        <div>{`${postData.date}${postData.isEdited ? \" (Edited)\" : \"\"}`}</div>\r\n                        {isProfile ?\r\n                            <div>{`${postData.username}`}</div>\r\n                            :\r\n                            <div className=\"LinkButton\"><Link to={`/p/${postData.username}`}>{`${postData.username}`}</Link></div>\r\n                        }\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Like\r\n                            postID={postID}\r\n                            totalLikes={totalLikes}\r\n                            isUserLiked={isUserLiked}\r\n                            refresh={refreshPost}\r\n                        />\r\n                        {!isExpanded &&\r\n                            <div className=\"LinkButton\" style={{ width: \"5.5rem\" }} onClick={expandPostClicked}>{`Comments${totalComments && totalComments > 0 ? ` (${totalComments})` : \"\"}`}</div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            :\r\n            <>\r\n                {isPostDeleted ?\r\n                    null\r\n                    :\r\n                    <div className=\"card\" style={{ margin: \"1rem auto\" }}>\r\n                        <div className=\"card-content\">\r\n                            <progress className=\"progress is-small is-light\" max=\"100\"></progress>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n\r\n        }\r\n    </>\r\n}\r\n\r\nexport default Post","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst CommentPostBox = props => {\r\n    const { postID, refreshComments } = props\r\n\r\n    const [inputText, setInputText] = useState(\"\")\r\n\r\n    const handlePost = () => {\r\n        axios.post(`/api/comments`,\r\n            { Comment: inputText, PostID: postID })\r\n            .then(() => {\r\n                setInputText(\"\")\r\n                refreshComments()\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }\r\n\r\n    return <div className=\"card\" style={{ margin: \"1rem auto\" }}>\r\n        <div className=\"card-content\">\r\n            <textarea required className=\"textarea\" value={inputText} onChange={e => setInputText(e.target.value)} placeholder=\"Comment on this post\" />\r\n            <button onClick={handlePost} className=\"button is-primary\" style={{ marginTop: \"0.5rem\" }}>Comment</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default CommentPostBox","import React, { useState, useCallback, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport Linkify from 'react-linkify'\r\nimport { Link } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nconst Comment = props => {\r\n    const { commentID, refreshComments } = props\r\n    const [userData] = useContext(UserContext)\r\n\r\n    const [commentData, setCommentData] = useState(null)\r\n\r\n    const [isEditMode, setIsEditMode] = useState(false)\r\n    const [editInput, setEditInput] = useState(\"\")\r\n\r\n    const refreshComment = useCallback(() => {\r\n        axios.get(`/api/comments`,\r\n            { params: { CommentID: commentID } })\r\n            .then(res => {\r\n                setCommentData(res.data)\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }, [commentID])\r\n\r\n    const cancelEdit = () => {\r\n        setIsEditMode(false)\r\n        setEditInput(\"\")\r\n    }\r\n\r\n    const saveEdit = () => {\r\n        axios.patch(`/api/comments`,\r\n            { CommentID: commentID, Comment: editInput })\r\n            .then(() => {\r\n                refreshComment()\r\n                cancelEdit()\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }\r\n\r\n    const startEdit = () => {\r\n        const text = commentData && (commentData.comment ?? \"\")\r\n        setEditInput(text)\r\n        setIsEditMode(true)\r\n    }\r\n\r\n    const deleteComment = () => {\r\n        if (window.confirm(\"Are you sure you would like to delete this comment?\")) {\r\n            axios.delete(`/api/comments`,\r\n                { data: { CommentID: commentID } })\r\n                .then(() => {\r\n                    refreshComments()\r\n                })\r\n                .catch(err => {\r\n                    if (err && err.response && err.response.data && err.response.data.error)\r\n                        toast.error(err.response.data.error)\r\n                    else\r\n                        toast.error(\"Sorry, an error occured\")\r\n                })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!commentData)\r\n            refreshComment()\r\n    }, [commentData, refreshComment])\r\n\r\n    return <>\r\n        {commentData ?\r\n            <div className=\"card\" style={{ margin: \"1rem auto\", overflowX: \"auto\" }}>\r\n                {(userData.userID === commentData.userID || userData.access === \"Admin\") &&\r\n                    <div style={{ position: \"absolute\", top: \"0.25rem\", right: \"0.25rem\", fontSize: \"0.7rem\" }}>\r\n                        {isEditMode ?\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                <div className=\"LinkButton\" onClick={cancelEdit}>Cancel</div>\r\n                                <div style={{ width: \"0.5rem\" }}></div>\r\n                                <div className=\"LinkButton\" onClick={saveEdit} style={{ fontWeight: 700 }}>Save</div>\r\n                            </div>\r\n                            :\r\n                            <div className=\"LinkButton\" onClick={startEdit}>Edit</div>\r\n                        }\r\n                    </div>\r\n                }\r\n                <div className=\"card-content\">\r\n                    <div style={{ whiteSpace: \"pre-wrap\" }}>\r\n                        {isEditMode ?\r\n                            <>\r\n                                <div className=\"LinkButton-Danger\" onClick={deleteComment} style={{ position: \"absolute\", top: \"0.25rem\", left: \"0.25rem\", fontSize: \"0.7rem\" }}>Delete</div>\r\n                                <textarea onChange={e => setEditInput(e.target.value)} value={editInput} className=\"textarea\" />\r\n                            </>\r\n                            :\r\n                            <Linkify>\r\n                                {`${commentData.comment}`}\r\n                            </Linkify>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-footer\" style={{ justifyContent: \"space-between\", fontSize: \"0.7rem\", color: \"gray\", padding: \"1rem\" }}>\r\n                    <div>\r\n                        <div>{`${commentData.date}${commentData.isEdited ? \" (Edited)\" : \"\"}`}</div>\r\n                        <div className=\"LinkButton\"><Link to={`/p/${commentData.username}`}>{`${commentData.username}`}</Link></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            :\r\n            <div className=\"card\" style={{ margin: \"1rem auto\" }}>\r\n                <div className=\"card-content\">\r\n                    <progress className=\"progress is-small is-light\" max=\"100\"></progress>\r\n                </div>\r\n            </div>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default Comment","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nimport Post from '../components/Post'\r\nimport CommentPostBox from '../components/CommentPostBox'\r\nimport Comment from '../components/Comment'\r\n\r\nconst ExpandedPost = props => {\r\n    const { postID, onPostDelete } = props\r\n    const [userData] = useContext(UserContext)\r\n\r\n    const [commentIDs, setCommentIDs] = useState(null)\r\n\r\n    const refreshComments = useCallback(() => {\r\n        if (postID === null)\r\n            return\r\n\r\n        axios.get(`/api/comments/list`,\r\n            { params: { PostID: postID } })\r\n            .then(res => {\r\n                setCommentIDs(res.data)\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }, [postID])\r\n\r\n    useEffect(() => {\r\n        if (!commentIDs)\r\n            refreshComments()\r\n    }, [commentIDs, refreshComments])\r\n\r\n    return <div style={{ overflowX: \"hidden\" }}>\r\n        <Post\r\n            postID={postID}\r\n            isExpanded\r\n            onDelete={onPostDelete}\r\n        />\r\n        {userData.isLoggedIn &&\r\n            <CommentPostBox\r\n                postID={postID}\r\n                refreshComments={refreshComments}\r\n            />}\r\n        {commentIDs && commentIDs.length > 0 &&\r\n            <div style={{ width: \"40rem\", margin: \"1rem auto\", fontWeight: 600, color: \"gray\", paddingLeft: \"2rem\" }} >Comments</div>\r\n        }\r\n        {commentIDs &&\r\n            commentIDs.map(commentID => <Comment\r\n                key={commentID}\r\n                commentID={commentID}\r\n                refreshComments={refreshComments}\r\n            />)\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default ExpandedPost","import React from 'react'\r\nimport Modal from 'react-modal'\r\n\r\nimport ExpandedPost from '../components/ExpandedPost'\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst PostModal = props => {\r\n    const { isOpen, closeModal, postID } = props\r\n\r\n    const onPostDelete = () => {\r\n        closeModal()\r\n    }\r\n\r\n    return <Modal\r\n        isOpen={isOpen}\r\n        onRequestClose={closeModal}\r\n        style={{\r\n            content: {\r\n                padding: \"1rem 0 1rem 0\",\r\n                maxWidth: \"60rem\",\r\n                margin: \"auto\",\r\n                top: \"0.5rem\",\r\n                bottom: \"0.5rem\",\r\n                left: \"1.75rem\",\r\n                right: \"1.75rem\"\r\n            },\r\n            overlay: {\r\n                zIndex: 35,\r\n                backgroundColor: \"rgba(128, 128, 128, 0.7)\"\r\n            }\r\n        }}\r\n    >\r\n        <div className=\"container\">\r\n            <ExpandedPost\r\n                postID={postID}\r\n                onPostDelete={onPostDelete} />\r\n        </div>\r\n    </Modal>\r\n}\r\n\r\nexport default PostModal","import React, { useEffect, useState, useContext, useCallback, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport noScroll from 'no-scroll'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nimport PostBox from '../components/PostBox'\r\nimport Post from '../components/Post'\r\nimport PostModal from '../components/PostModal'\r\n\r\nconst Home = props => {\r\n    const [userData] = useContext(UserContext)\r\n\r\n    const [postIDs, setPostIDs] = useState(null)\r\n\r\n    const [isPostModalVisible, setIsPostModalVisible] = useState(false)\r\n    const [selectedPostID, setSelectedPostID] = useState(null)\r\n    const [refreshIndex, setRefreshIndex] = useState(null)\r\n\r\n    const getPostIDs = useRef()\r\n    const isFetching = useRef(false)\r\n    getPostIDs.current = () => { return postIDs }\r\n\r\n    const refreshPosts = useCallback(() => {\r\n        axios.get(`/api/home/posts`,\r\n            { params: { LastID: null } })\r\n            .then(res => setPostIDs(res.data))\r\n            .catch(() => setTimeout(refreshPosts, 500))\r\n    }, [])\r\n\r\n    const getMorePosts = useCallback(() => {\r\n        const posts = getPostIDs.current()\r\n\r\n        if (!posts || posts.length < 1)\r\n            return\r\n\r\n        const lastID = posts[posts.length - 1]\r\n\r\n        if (lastID <= 1)\r\n            return\r\n\r\n        isFetching.current = true\r\n        axios.get(`/api/home/posts`,\r\n            { params: { lastID } })\r\n            .then(res => setPostIDs([...postIDs, ...res.data]))\r\n            .catch(() => toast.error(\"Sorry, something went wrong\"))\r\n            .finally(() => isFetching.current = false)\r\n    }, [postIDs])\r\n\r\n    const closePostModal = () => {\r\n        setIsPostModalVisible(false)\r\n        setRefreshIndex(selectedPostID)\r\n        setSelectedPostID(null)\r\n        window.history.pushState(null, null, '/')\r\n    }\r\n\r\n    const openPostModal = postID => {\r\n        setSelectedPostID(postID)\r\n        setIsPostModalVisible(true)\r\n        window.history.pushState(null, null, `/wh/${postID}`)\r\n    }\r\n\r\n    const handleScroll = useCallback(e => {\r\n        if (!isFetching.current && window.innerHeight + document.documentElement.scrollTop + 200 >= document.documentElement.offsetHeight)\r\n            getMorePosts()\r\n    }, [getMorePosts])\r\n\r\n    useEffect(() => {\r\n        if (!postIDs)\r\n            refreshPosts()\r\n    }, [postIDs, refreshPosts])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll)\r\n        return () => window.removeEventListener('scroll', handleScroll)\r\n    }, [handleScroll])\r\n\r\n    useEffect(() => { // Trigger infinite scroll if not enough height for a scrollbar\r\n        if (postIDs && postIDs.length > 0 && window.innerHeight > document.documentElement.offsetHeight)\r\n            handleScroll()\r\n    }, [postIDs, handleScroll])\r\n\r\n    useEffect(() => {\r\n        if (isPostModalVisible)\r\n            noScroll.on()\r\n        else\r\n            noScroll.off()\r\n\r\n        return () => noScroll.off()\r\n    }, [isPostModalVisible])\r\n\r\n    return <>\r\n        <div className=\"container\">\r\n            {userData.isLoggedIn &&\r\n                <PostBox refreshPosts={refreshPosts} />\r\n            }\r\n            {postIDs &&\r\n                postIDs.map(postID => <Post\r\n                    key={postID}\r\n                    postID={postID}\r\n                    expandPost={openPostModal}\r\n                    refreshIndex={refreshIndex}\r\n                    setRefreshIndex={setRefreshIndex}\r\n                />)\r\n            }\r\n        </div>\r\n        <PostModal\r\n            isOpen={isPostModalVisible}\r\n            closeModal={closePostModal}\r\n            postID={selectedPostID}\r\n        />\r\n    </>\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\n\r\nimport ExpandedPost from '../components/ExpandedPost'\r\n\r\nconst PostPage = props => {\r\n    const history = useHistory()\r\n    const { postID } = useParams()\r\n\r\n    const postDeleted = () => {\r\n        history.push(\"/\")\r\n    }\r\n\r\n    return <div className=\"container\">\r\n        <ExpandedPost postID={postID} onPostDelete={postDeleted} />\r\n    </div>\r\n}\r\n\r\nexport default PostPage","import React, { useEffect, useState, useCallback } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport axios from 'axios'\r\nimport noScroll from 'no-scroll'\r\n\r\nimport Post from '../components/Post'\r\nimport PostModal from '../components/PostModal'\r\n\r\nconst Profile = props => {\r\n    const { username } = useParams()\r\n    const [profileData, setProfileData] = useState(null)\r\n    const [postIDs, setPostIDs] = useState(null)\r\n\r\n    const [isPostModalVisible, setIsPostModalVisible] = useState(false)\r\n    const [selectedPostID, setSelectedPostID] = useState(null)\r\n    const [refreshIndex, setRefreshIndex] = useState(null)\r\n\r\n    const refreshPosts = useCallback(() => {\r\n        axios.get(`/api/profile/posts`,\r\n            { params: { UserID: profileData.userID } })\r\n            .then(res => setPostIDs(res.data))\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }, [profileData])\r\n\r\n    const closePostModal = () => {\r\n        setIsPostModalVisible(false)\r\n        setRefreshIndex(selectedPostID)\r\n        setSelectedPostID(null)\r\n        window.history.pushState(null, null, `/p/${username}`)\r\n    }\r\n\r\n    const openPostModal = postID => {\r\n        setSelectedPostID(postID)\r\n        setIsPostModalVisible(true)\r\n        window.history.pushState(null, null, `/wh/${postID}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`/api/profile/user`,\r\n            { params: { Username: username } })\r\n            .then(res => setProfileData(res.data))\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }, [username])\r\n\r\n    useEffect(() => {\r\n        if (profileData) {\r\n            refreshPosts()\r\n        }\r\n    }, [profileData, refreshPosts])\r\n\r\n    useEffect(() => {\r\n        if (isPostModalVisible)\r\n            noScroll.on()\r\n        else\r\n            noScroll.off()\r\n\r\n        return () => noScroll.off()\r\n    }, [isPostModalVisible])\r\n\r\n    return <>\r\n        <div className=\"container\">\r\n            {profileData &&\r\n                <>\r\n                    <h5 style={{ textAlign: \"center\" }} className=\"title\">{`${profileData.username}'s Posts`}</h5>\r\n                    <>\r\n                        {profileData.access !== \"User\" &&\r\n                            <h5 style={{ textAlign: \"center\" }} className=\"subtitle\">{profileData.access}</h5>\r\n                        }\r\n                    </>\r\n                </>\r\n            }\r\n            {postIDs &&\r\n                postIDs.map(postID => <Post\r\n                    key={postID}\r\n                    postID={postID}\r\n                    expandPost={openPostModal}\r\n                    refreshIndex={refreshIndex}\r\n                    setRefreshIndex={setRefreshIndex}\r\n                    isProfile\r\n                />)\r\n            }\r\n        </div>\r\n        <PostModal\r\n            isOpen={isPostModalVisible}\r\n            closeModal={closePostModal}\r\n            postID={selectedPostID}\r\n            refresh={refreshPosts}\r\n        />\r\n    </>\r\n}\r\n\r\nexport default Profile","import React, { useState, useContext } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios'\r\n\r\nimport UserContext from '../UserContext'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst Settings = props => {\r\n    const [userData] = useContext(UserContext)\r\n\r\n    const [currentPassword, setCurrentPassword] = useState(\"\")\r\n    const [newPassword, setNewPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    const [isCurrentPasswordVisible, setIsCurrentPasswordVisible] = useState(false)\r\n    const [isNewPasswordVisible, setIsNewPasswordVisible] = useState(false)\r\n    const [isConfirmPasswordVisible, setIsConfirmPasswordVisible] = useState(false)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        axios.patch(`/api/settings/password`,\r\n            { Current: currentPassword, New: newPassword, Confirm: confirmPassword })\r\n            .then(() => {\r\n                toast.info(\"Password updated\")\r\n                setCurrentPassword(\"\")\r\n                setNewPassword(\"\")\r\n                setConfirmPassword(\"\")\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }\r\n\r\n    return <>\r\n        {userData.isLoggedIn ?\r\n            <div className=\"container\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-title\">\r\n                        <h1>Update Password</h1>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <label htmlFor=\"current-password\" className=\"label\">Current Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded\">\r\n                                    <input value={currentPassword} onChange={e => setCurrentPassword(e.target.value)} className=\"input\" name=\"current-password\" type={isCurrentPasswordVisible ? \"input\" : \"password\"} placeholder=\"Current Password\" required />\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsCurrentPasswordVisible(!isCurrentPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isCurrentPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <label htmlFor=\"new-password\" className=\"label\">New Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded\">\r\n                                    <input value={newPassword} onChange={e => setNewPassword(e.target.value)} className=\"input\" name=\"new-password\" type={isNewPasswordVisible ? \"input\" : \"password\"} placeholder=\"New Password\" required />\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsNewPasswordVisible(!isNewPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isNewPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <label htmlFor=\"confirm-password\" className=\"label\">Confirm Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded\">\r\n                                    <input value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} className=\"input\" name=\"confirm-password\" type={isConfirmPasswordVisible ? \"input\" : \"password\"} placeholder=\"Confirm Password\" required />\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsConfirmPasswordVisible(!isConfirmPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isConfirmPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <p className=\"control\">\r\n                                    <button type=\"submit\" className=\"button is-primary\">Update</button>\r\n                                </p>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            :\r\n            <div className=\"container\">\r\n                Please log in or create an account to view this page.\r\n        </div>}\r\n    </>\r\n}\r\n\r\nexport default Settings","import React, { useState, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faLock, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\r\nimport { toast } from 'react-toastify'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nimport './css/LoginRegister.css'\r\n\r\nconst Register = props => {\r\n    const [userData, setToken] = useContext(UserContext)\r\n\r\n    const [isPasswordVisible, setIsPasswordVisible] = useState(false)\r\n    const [isConfirmPasswordVisible, setIsConfirmPasswordVisible] = useState(false)\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        axios.post(`/api/register`, { username, password, Confirm: confirmPassword })\r\n            .then(res => {\r\n                setToken(res.data.jwt)\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }\r\n\r\n    if (userData.isLoggedIn)\r\n        return <Redirect to=\"/\" />\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-title\">\r\n                        <h1>Registration</h1>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <label htmlFor=\"username\" className=\"label\">Username</label>\r\n                            <div className=\"field\">\r\n                                <p className=\"control has-icons-left\">\r\n                                    <input value={username} onChange={e => setUsername(e.target.value)} className=\"input\" type=\"text\" name=\"username\" placeholder=\"Username\" autoFocus required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <FontAwesomeIcon icon={faUser} />\r\n                                    </span>\r\n                                </p>\r\n                            </div>\r\n                            <label htmlFor=\"password\" className=\"label\">Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded has-icons-left\">\r\n                                    <input value={password} onChange={e => setPassword(e.target.value)} className=\"input\" name=\"password\" type={isPasswordVisible ? \"input\" : \"password\"} placeholder=\"Password\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <FontAwesomeIcon icon={faLock} />\r\n                                    </span>\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsPasswordVisible(!isPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <label htmlFor=\"confirm-password\" className=\"label\">Confirm Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded has-icons-left\">\r\n                                    <input value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} className=\"input\" name=\"confirm-password\" type={isConfirmPasswordVisible ? \"input\" : \"password\"} placeholder=\"Confirm Password\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <FontAwesomeIcon icon={faLock} />\r\n                                    </span>\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsConfirmPasswordVisible(!isConfirmPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isConfirmPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <p className=\"control\">\r\n                                    <button type=\"submit\" className=\"button is-primary\">Register</button>\r\n                                </p>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Register","import React, { useState, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faLock, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\r\nimport { toast } from 'react-toastify'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nconst Login = props => {\r\n    const [userData, setToken] = useContext(UserContext)\r\n    \r\n    const [isPasswordVisible, setIsPasswordVisible] = useState(false)\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        axios.post(`/api/login`, { username, password })\r\n            .then(res => {\r\n                if (res.data.error) {\r\n                    toast.error(res.data.error)\r\n                    return\r\n                }\r\n\r\n                setToken(res.data.jwt)\r\n            })\r\n            .catch()\r\n    }\r\n\r\n    if (userData.isLoggedIn)\r\n        return <Redirect to=\"/\" />\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-title\">\r\n                        <h1>Login</h1>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <label htmlFor=\"username\" className=\"label\">Username</label>\r\n                            <div className=\"field\">\r\n                                <p className=\"control has-icons-left\">\r\n                                    <input value={username} onChange={e => setUsername(e.target.value)} className=\"input\" type=\"text\" name=\"username\" placeholder=\"Username\" autoFocus required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <FontAwesomeIcon icon={faUser} />\r\n                                    </span>\r\n                                </p>\r\n                            </div>\r\n                            <label htmlFor=\"password\" className=\"label\">Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded has-icons-left\">\r\n                                    <input value={password} onChange={e => setPassword(e.target.value)} className=\"input\" name=\"password\" type={isPasswordVisible ? \"input\" : \"password\"} placeholder=\"Password\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <FontAwesomeIcon icon={faLock} />\r\n                                    </span>\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsPasswordVisible(!isPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <p className=\"control\">\r\n                                    <button type=\"submit\" className=\"button is-primary\">Log In</button>\r\n                                </p>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Login","import React, { useEffect, useContext } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nconst Logout = props => {\r\n    const [userData, setToken] = useContext(UserContext)\r\n\r\n    useEffect(() => {\r\n        if (userData.token) {\r\n            setToken(null)\r\n            toast.info(\"You have been logged out\")\r\n        }\r\n    }, [userData.token, setToken])\r\n\r\n    return <>\r\n        {userData.token ?\r\n            <Redirect to=\"/\" />\r\n            :\r\n            <div>\r\n                Logging out...\r\n            </div>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default Logout","import React from 'react'\r\n\r\nconst Error404 = props =>\r\n    <div className=\"container\">\r\n        <h1 className=\"title\">\r\n            404\r\n      </h1>\r\n        <p className=\"subtitle\">\r\n            Nothing was found at this location\r\n      </p>\r\n    </div>\r\n\r\nexport default Error404","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nimport './css/NavBar.css'\r\n\r\nconst NavBar = () => {\r\n    const [userData] = useContext(UserContext)\r\n    const [isActive, setIsActive] = useState(false)\r\n    const [isUsernameDropdownActive, setIsUsernameDropdownActive] = useState(false)\r\n\r\n    const handleClick = useCallback(e => {\r\n        if (isUsernameDropdownActive)\r\n            setIsUsernameDropdownActive(false)\r\n    }, [isUsernameDropdownActive])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('click', handleClick)\r\n        return () => window.removeEventListener('click', handleClick)\r\n    }, [handleClick])\r\n\r\n    return (\r\n        <nav style={{ marginBottom: \"1rem\" }} className=\"navbar is-dark\" role=\"navigation\" aria-label=\"main navigation\">\r\n            <div className=\"navbar-brand\">\r\n                <Link className=\"navbar-item NavBar-brand\" to=\"/\">Word Hole</Link>\r\n                <div onClick={() => setIsActive(!isActive)} role=\"button\" className={`${isActive ? \"is-active\" : \"\"} navbar-burger`} aria-label=\"menu\" aria-expanded=\"false\">\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`${isActive ? \"is-active\" : \"\"} navbar-menu`}>\r\n                <div className=\"navbar-end\">\r\n                    {userData.isLoggedIn ?\r\n                        <div id={\"navbar-username-dropdown-button\"} className={`navbar-item has-dropdown ${isUsernameDropdownActive ? \"is-active\" : \"\"}`}>\r\n                            <div className=\"navbar-link\" onClick={() => setIsUsernameDropdownActive(!isUsernameDropdownActive)}>\r\n                                {userData.username}\r\n                            </div>\r\n\r\n                            <div className=\"navbar-dropdown\">\r\n                                <Link className=\"navbar-item\" to={`/p/${userData.username}`}>Profile</Link>\r\n                                <Link className=\"navbar-item\" to={`/settings`}>Settings</Link>\r\n                                <hr className=\"navbar-divider\" />\r\n                                <Link className=\"navbar-item\" to={\"/logout\"}>Log Out</Link>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div className=\"navbar-item\">\r\n                            <div className=\"buttons\">\r\n                                <Link className=\"button is-dark\" to={\"/register\"}>Register</Link>\r\n                                <Link className=\"button is-primary\" to={\"/login\"}><strong>Log In</strong></Link>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </nav >\r\n    )\r\n}\r\n\r\nexport default NavBar","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst WaitOnWake = props => {\r\n    const [isVisible, setIsVisible] = useState(false)\r\n    const { setIsServerAwake } = props\r\n\r\n    useEffect(() => {\r\n        if (!isVisible)\r\n            setTimeout(() => setIsVisible(true), 700)\r\n    }, [isVisible])\r\n\r\n    useEffect(() => pingServer(), [])\r\n\r\n    const pingServer = () => {\r\n        axios.get(`/api/common/hello`)\r\n            .then(() => setIsServerAwake(true))\r\n            .catch(() => setTimeout(pingServer, 500))\r\n    }\r\n\r\n    return <>\r\n        {isVisible ?\r\n            <div className=\"container\">\r\n                <h2 className=\"subtitle\" style={{ marginTop: \"2rem\" }}>Waking up the server...</h2>\r\n                <progress className=\"progress is-small is-primary\" max=\"100\"></progress>\r\n            </div>\r\n            :\r\n            <></>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default WaitOnWake","import React, { useState } from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport { UserProvider } from './UserContext'\r\n\r\nimport Home from './pages/Home'\r\nimport PostPage from './pages/PostPage'\r\nimport Profile from './pages/Profile'\r\nimport Settings from './pages/Settings'\r\nimport Register from './pages/Register'\r\nimport Login from './pages/Login'\r\nimport Logout from './pages/Logout'\r\nimport Error404 from './pages/Error404'\r\n\r\nimport NavBar from './components/NavBar'\r\nimport WaitOnWake from './components/WaitOnWake'\r\n\r\ntoast.configure({\r\n    hideProgressBar: true,\r\n    newestOnTop: true,\r\n    autoClose: 3000\r\n})\r\n\r\nconst App = () => {\r\n    const [isServerAwake, setIsServerAwake] = useState(false)\r\n\r\n    return <>\r\n        {isServerAwake ?\r\n            <BrowserRouter>\r\n                <UserProvider>\r\n                    <NavBar />\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={Home} />\r\n                        <Route path=\"/wh/:postID\" exact component={PostPage} />\r\n                        <Route path=\"/p/:username\" exact component={Profile} />\r\n                        <Route path=\"/settings\" exact component={Settings} />\r\n                        <Route path=\"/register\" exact component={Register} />\r\n                        <Route path=\"/login\" exact component={Login} />\r\n                        <Route path=\"/logout\" exact component={Logout} />\r\n                        <Route component={Error404} />\r\n                    </Switch>\r\n                </UserProvider>\r\n            </BrowserRouter>\r\n            :\r\n            <WaitOnWake setIsServerAwake={setIsServerAwake} />\r\n        }\r\n    </>\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport axios from 'axios'\r\n\r\nimport 'bulma/css/bulma.css'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}