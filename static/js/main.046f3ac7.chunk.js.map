{"version":3,"sources":["UserContext.js","components/PostBox.js","components/Like.js","components/Post.js","components/CommentPostBox.js","components/Comment.js","components/ExpandedPost.js","components/PostModal.js","pages/Home.js","pages/PostPage.js","pages/Profile.js","pages/Settings.js","pages/Register.js","pages/Login.js","pages/Logout.js","pages/Error404.js","components/NavBar.js","components/LoginWatcher.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","UserProvider","props","useState","isLoggedIn","setIsLoggedIn","username","setUsername","userID","setUserID","access","setAccess","token","setToken","Provider","value","children","PostBox","useContext","userData","inputText","setInputText","characterCounter","setCharacterCounter","className","style","margin","required","onChange","e","text","target","length","substr","placeholder","onClick","axios","post","process","Post","headers","Authorization","then","refreshPosts","catch","toast","error","marginTop","float","color","Likes","postID","totalLikes","isUserLiked","refresh","deleteLike","delete","data","PostID","addLike","put","display","justifyContent","alignItems","width","cursor","icon","faSolidHeart","faHeart","info","marginLeft","fontWeight","isExpanded","isProfile","expandPost","refreshIndex","setRefreshIndex","postData","setPostData","setTotalLikes","setIsUserLiked","totalComments","setTotalComments","isEditMode","setIsEditMode","editInput","setEditInput","isPostDeleted","setIsPostDeleted","expandPostClicked","tagName","toLowerCase","refreshPost","useCallback","forcedRefresh","get","params","ID","res","err","response","notFound","cancelEdit","useEffect","position","top","right","fontSize","patch","onEdit","window","confirm","onDelete","left","whiteSpace","padding","date","isEdited","to","Like","max","CommentPostBox","refreshComments","Comment","commentID","commentData","setCommentData","refreshComment","CommentID","comment","ExpandedPost","onPostDelete","commentIDs","setCommentIDs","paddingLeft","map","key","Modal","setAppElement","PostModal","isOpen","closeModal","onRequestClose","content","maxWidth","maxHeight","overlay","zIndex","backgroundColor","Home","sayHi","setSayHi","postIDs","setPostIDs","isPostModalVisible","setIsPostModalVisible","selectedPostID","setSelectedPostID","getPostIDs","useRef","isFetching","current","LastID","getMorePosts","posts","lastID","finally","openPostModal","history","replaceState","sendHello","setTimeout","handleScroll","innerHeight","document","documentElement","scrollTop","offsetHeight","addEventListener","removeEventListener","noScroll","on","off","PostPage","useHistory","useParams","push","Profile","profileData","setProfileData","UserID","Username","textAlign","Settings","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","isCurrentPasswordVisible","setIsCurrentPasswordVisible","isNewPasswordVisible","setIsNewPasswordVisible","isConfirmPasswordVisible","setIsConfirmPasswordVisible","onSubmit","preventDefault","Current","New","Confirm","htmlFor","name","type","faEye","faEyeSlash","Register","isPasswordVisible","setIsPasswordVisible","password","setPassword","useCookies","setCookie","redirect","setRedirect","jwt","autoFocus","faUser","faLock","Login","withCookies","cookies","cookieState","cookie","cookieCleared","setCookieCleared","remove","Error404","NavBar","isActive","setIsActive","isUsernameDropdownActive","setIsUsernameDropdownActive","handleClick","marginBottom","role","aria-label","aria-expanded","aria-hidden","id","globalSetIsLoggedIn","globalSetUsername","globalSetUserID","globalSetAccess","globalSetToken","clearGlobals","cookieToken","jwt_decode","exp","Date","now","Number","configure","hideProgressBar","newestOnTop","autoClose","App","path","exact","component","Logout","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.046f3ac7.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\r\n\r\nconst UserContext = createContext()\r\n\r\nexport const UserProvider = props => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n    const [username, setUsername] = useState(\"\")\r\n    const [userID, setUserID] = useState(null)\r\n    const [access, setAccess] = useState(\"User\")\r\n    const [token, setToken] = useState(null)\r\n\r\n    return (<UserContext.Provider value={[{\r\n        isLoggedIn,\r\n        username,\r\n        userID,\r\n        access,\r\n        token\r\n    },\r\n        setIsLoggedIn, setUsername, setUserID, setAccess, setToken]}>\r\n        {props.children}\r\n    </UserContext.Provider>)\r\n\r\n}\r\n\r\nexport default UserContext","import React, { useState, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nconst PostBox = props => {\r\n    const maxCharacters = 512\r\n    const [userData] = useContext(UserContext)\r\n\r\n    const [inputText, setInputText] = useState(\"\")\r\n    const [characterCounter, setCharacterCounter] = useState(maxCharacters)\r\n\r\n    const handleInput = e => {\r\n        let text = e.target.value\r\n\r\n        if (text.length > maxCharacters)\r\n            text = text.substr(0, maxCharacters)\r\n\r\n        setCharacterCounter(maxCharacters - text.length)\r\n        setInputText(text)\r\n    }\r\n\r\n    const handlePost = () => {\r\n        axios.post(`${process.env.REACT_APP_API_URL}/api/home/post`, { Post: inputText }, {\r\n            headers: { Authorization: userData.token }\r\n        })\r\n            .then(() => {\r\n                setInputText(\"\")\r\n                setCharacterCounter(maxCharacters)\r\n                props.refreshPosts()\r\n            })\r\n            .catch(() => toast.error(\"Sorry, an error occurred\"))\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\" style={{ margin: \"1rem auto\" }}>\r\n            <div className=\"card-content\">\r\n                <textarea required onChange={handleInput} className=\"textarea\" placeholder=\"Put your words on Word Hole\" value={inputText} />\r\n                <button onClick={handlePost} className=\"button is-primary\" style={{ marginTop: \"0.5rem\" }}>Post</button>\r\n                <div style={{ float: \"right\", color: \"lightgray\" }} >Remaining characters: {characterCounter}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostBox","import React, { useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart as faSolidHeart } from '@fortawesome/free-solid-svg-icons'\r\nimport { faHeart } from '@fortawesome/free-regular-svg-icons'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nconst Likes = props => {\r\n    const [userData] = useContext(UserContext)\r\n    const { postID, totalLikes, isUserLiked, refresh } = props\r\n\r\n    const toggleLike = () => {\r\n        if (!userData.isLoggedIn){\r\n            toast.info(\"Please log in to Like posts\")\r\n            return\r\n        }\r\n        \r\n        if (isUserLiked)\r\n            deleteLike()\r\n        else\r\n            addLike()\r\n    }\r\n\r\n    const deleteLike = () => {\r\n        axios.delete(`${process.env.REACT_APP_API_URL}/api/likes`,\r\n            {\r\n                data: { PostID: postID },\r\n                headers: { Authorization: userData.token }\r\n            })\r\n            .then(() => {\r\n                refresh()\r\n            })\r\n            .catch(() => toast.error(\"Sorry, something went wrong\"))\r\n    }\r\n\r\n    const addLike = () => {\r\n        axios.put(`${process.env.REACT_APP_API_URL}/api/likes`,\r\n            { PostID: postID },\r\n            { headers: { Authorization: userData.token } })\r\n            .then(() => {\r\n                refresh()\r\n            })\r\n            .catch(() => toast.error(\"Sorry, something went wrong\"))\r\n    }\r\n\r\n    return <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", width: \"1.5rem\" }}>\r\n        <FontAwesomeIcon style={{ marginTop: \"0.15rem\", color: \"fuchsia\", cursor: \"pointer\" }} icon={isUserLiked ? faSolidHeart : faHeart} onClick={toggleLike} />\r\n        <div style={{ marginLeft: \"0.25rem\", fontWeight: 600 }}>{`${totalLikes ? `(${totalLikes})` : \"\"}`}</div>\r\n    </div>\r\n}\r\n\r\nexport default Likes","import React, { useState, useEffect, useCallback, useContext } from 'react'\r\nimport Linkify from 'react-linkify'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport Like from '../components/Like'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nimport '../components/css/LinkButton.css'\r\n\r\nconst Post = props => {\r\n    const maxCharacters = 512\r\n\r\n    const [userData] = useContext(UserContext)\r\n\r\n    const { postID, isExpanded, isProfile, expandPost, refreshIndex, setRefreshIndex } = props\r\n    const [postData, setPostData] = useState(null)\r\n\r\n    const [totalLikes, setTotalLikes] = useState(null)\r\n    const [isUserLiked, setIsUserLiked] = useState(null)\r\n    const [totalComments, setTotalComments] = useState(null)\r\n\r\n    const [isEditMode, setIsEditMode] = useState(false)\r\n    const [editInput, setEditInput] = useState(\"\")\r\n    const [characterCounter, setCharacterCounter] = useState(maxCharacters)\r\n\r\n    const [isPostDeleted, setIsPostDeleted] = useState(false)\r\n\r\n    const expandPostClicked = e => {\r\n        if (isEditMode || isExpanded)\r\n            return\r\n\r\n        if (e.target && e.target.tagName && e.target.tagName.toLowerCase() !== \"a\")\r\n            expandPost(postID)\r\n    }\r\n\r\n    const refreshPost = useCallback((forcedRefresh) => {\r\n        if (postID === null)\r\n            return\r\n\r\n        axios.get(`${process.env.REACT_APP_API_URL}/api/post`,\r\n            { params: { ID: postID }, headers: { Authorization: userData.token } })\r\n            .then(res => {\r\n                setPostData(res.data.post)\r\n                setTotalLikes(res.data.totalLikes)\r\n                setTotalComments(res.data.totalComments)\r\n                setIsUserLiked(res.data.isUserLiked)\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.notFound) {\r\n                    if (forcedRefresh) {\r\n                        setIsPostDeleted(true)\r\n                        setPostData(null)\r\n                    }\r\n                    else {\r\n                        toast.error(\"Post not found\")\r\n                    }\r\n                }\r\n                else {\r\n                    toast.error(\"Sorry, an error occured\")\r\n                }\r\n            })\r\n    }, [postID, userData])\r\n\r\n    const handleInput = e => {\r\n        let text = e.target.value\r\n\r\n        if (text.length > maxCharacters)\r\n            text = text.substr(0, maxCharacters)\r\n\r\n        setCharacterCounter(maxCharacters - text.length)\r\n        setEditInput(text)\r\n    }\r\n\r\n    const startEdit = () => {\r\n        const text = postData && postData.post ? postData.post : \"\"\r\n        setEditInput(text)\r\n        setIsEditMode(true)\r\n        setCharacterCounter(maxCharacters - text.length)\r\n    }\r\n\r\n    const cancelEdit = () => {\r\n        setEditInput(\"\")\r\n        setIsEditMode(false)\r\n        setCharacterCounter(maxCharacters)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!postData && !isPostDeleted && postID !== null)\r\n            refreshPost()\r\n    }, [refreshPost, postData, isPostDeleted, postID])\r\n\r\n    useEffect(() => {\r\n        if (!isPostDeleted && refreshIndex === postID) {\r\n            refreshPost(true)\r\n            setRefreshIndex(null)\r\n        }\r\n    }, [refreshIndex, postID, refreshPost, setRefreshIndex, isPostDeleted])\r\n\r\n    const deletePost = () => {\r\n        if (window.confirm(\"Are you sure you would like to delete this post?\")) {\r\n            axios.delete(`${process.env.REACT_APP_API_URL}/api/post`,\r\n                { data: { ID: postID }, headers: { Authorization: userData.token } })\r\n                .then(() => {\r\n                    setIsPostDeleted(true)\r\n                    setPostData(null)\r\n\r\n                    if (props.onDelete)\r\n                        props.onDelete()\r\n                })\r\n                .catch(err => {\r\n                    if (err && err.response && err.response.data && err.response.data.error)\r\n                        toast.error(err.response.data.error)\r\n                    else\r\n                        toast.error(\"Sorry, an error occured\")\r\n                })\r\n        }\r\n    }\r\n\r\n    const saveEdit = () => {\r\n        axios.patch(`${process.env.REACT_APP_API_URL}/api/post`,\r\n            { ID: postID, Post: editInput }, { headers: { Authorization: userData.token } })\r\n            .then(() => {\r\n                cancelEdit()\r\n                refreshPost()\r\n\r\n                if (props.onEdit)\r\n                    props.onEdit()\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }\r\n\r\n    return <>\r\n        {postData ?\r\n            <div className=\"card\" style={{ margin: \"1rem auto\" }}>\r\n                {(userData.userID === postData.userID || userData.access === \"Admin\") &&\r\n                    <div style={{ position: \"absolute\", top: \"0.25rem\", right: \"0.25rem\", fontSize: \"0.7rem\" }}>\r\n                        {isEditMode ?\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                <div className=\"LinkButton\" onClick={cancelEdit}>Cancel</div>\r\n                                <div style={{ width: \"0.5rem\" }}></div>\r\n                                <div className=\"LinkButton\" onClick={saveEdit} style={{ fontWeight: 700 }}>Save</div>\r\n                            </div>\r\n                            :\r\n                            <div className=\"LinkButton\" onClick={startEdit}>Edit</div>\r\n                        }\r\n                    </div>\r\n                }\r\n                <div className=\"card-content\" style={{ cursor: `${isExpanded || isEditMode ? \"auto\" : \"pointer\"}` }} onClick={expandPostClicked}>\r\n                    {isEditMode ?\r\n                        <>\r\n                            <div className=\"LinkButton-Danger\" onClick={deletePost} style={{ position: \"absolute\", top: \"0.25rem\", left: \"0.25rem\", fontSize: \"0.7rem\" }}>Delete</div>\r\n                            <textarea onChange={handleInput} value={editInput} className=\"textarea\" />\r\n                            <div style={{ float: \"right\", color: \"lightgray\" }} >Remaining characters: {characterCounter}</div>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            {isExpanded ?\r\n                                <div style={{ whiteSpace: \"pre-wrap\" }}>\r\n                                    <Linkify>{postData.post}</Linkify>\r\n                                </div>\r\n                                :\r\n                                <div style={{ whiteSpace: \"pre-wrap\" }}>\r\n                                    <Linkify>{postData.post}</Linkify>\r\n                                </div>\r\n                            }\r\n                        </>\r\n                    }\r\n                </div>\r\n                <div className=\"card-footer\" style={{ justifyContent: \"space-between\", fontSize: \"0.7rem\", color: \"gray\", padding: \"1rem\" }}>\r\n                    <div>\r\n                        <div>{`${postData.date}${postData.isEdited ? \" (Edited)\" : \"\"}`}</div>\r\n                        {isProfile ?\r\n                            <div>{`${postData.username}`}</div>\r\n                            :\r\n                            <div className=\"LinkButton\"><Link to={`/p/${postData.username}`}>{`${postData.username}`}</Link></div>\r\n                        }\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Like\r\n                            postID={postID}\r\n                            totalLikes={totalLikes}\r\n                            isUserLiked={isUserLiked}\r\n                            refresh={refreshPost}\r\n                        />\r\n                        {!isExpanded &&\r\n                            <div className=\"LinkButton\" style={{ width: \"5.5rem\" }} onClick={expandPostClicked}>{`Comments${totalComments && totalComments > 0 ? ` (${totalComments})` : \"\"}`}</div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            :\r\n            <>\r\n                {isPostDeleted ?\r\n                    null\r\n                    :\r\n                    <div className=\"card\" style={{ margin: \"1rem auto\" }}>\r\n                        <div className=\"card-content\">\r\n                            <progress className=\"progress is-small is-light\" max=\"100\"></progress>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </>\r\n\r\n        }\r\n    </>\r\n}\r\n\r\nexport default Post","import React, { useState, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nconst CommentPostBox = props => {\r\n    const { postID, refreshComments } = props\r\n    const [userData] = useContext(UserContext)\r\n\r\n    const [inputText, setInputText] = useState(\"\")\r\n\r\n    const handlePost = () => {\r\n        axios.post(`${process.env.REACT_APP_API_URL}/api/comments`,\r\n            { Comment: inputText, PostID: postID },\r\n            {\r\n                headers: { Authorization: userData.token }\r\n            })\r\n            .then(()=>{\r\n                setInputText(\"\")\r\n                refreshComments()\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }\r\n\r\n    return <div className=\"card\" style={{ margin: \"1rem auto\" }}>\r\n        <div className=\"card-content\">\r\n            <textarea required className=\"textarea\" value={inputText} onChange={e => setInputText(e.target.value)} placeholder=\"Comment on this post\" />\r\n            <button onClick={handlePost} className=\"button is-primary\" style={{ marginTop: \"0.5rem\" }}>Comment</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default CommentPostBox","import React, { useState, useCallback, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport Linkify from 'react-linkify'\r\nimport { Link } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nconst Comment = props => {\r\n    const { commentID, refreshComments } = props\r\n    const [userData] = useContext(UserContext)\r\n\r\n    const [commentData, setCommentData] = useState(null)\r\n\r\n    const [isEditMode, setIsEditMode] = useState(false)\r\n    const [editInput, setEditInput] = useState(\"\")\r\n\r\n    const refreshComment = useCallback(() => {\r\n        axios.get(`${process.env.REACT_APP_API_URL}/api/comments`,\r\n            { params: { CommentID: commentID } })\r\n            .then(res => {\r\n                setCommentData(res.data)\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }, [commentID])\r\n\r\n    const cancelEdit = () => {\r\n        setIsEditMode(false)\r\n        setEditInput(\"\")\r\n    }\r\n\r\n    const saveEdit = () => {\r\n        axios.patch(`${process.env.REACT_APP_API_URL}/api/comments`,\r\n            { CommentID: commentID, Comment: editInput }, { headers: { Authorization: userData.token } })\r\n            .then(() => {\r\n                refreshComment()\r\n                cancelEdit()\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }\r\n\r\n    const startEdit = () => {\r\n        const text = commentData && (commentData.comment ?? \"\")\r\n        setEditInput(text)\r\n        setIsEditMode(true)\r\n    }\r\n\r\n    const deleteComment = () => {\r\n        if (window.confirm(\"Are you sure you would like to delete this comment?\")) {\r\n            axios.delete(`${process.env.REACT_APP_API_URL}/api/comments`,\r\n                { data: { CommentID: commentID }, headers: { Authorization: userData.token } })\r\n                .then(() => {\r\n                    refreshComments()\r\n                })\r\n                .catch(err => {\r\n                    if (err && err.response && err.response.data && err.response.data.error)\r\n                        toast.error(err.response.data.error)\r\n                    else\r\n                        toast.error(\"Sorry, an error occured\")\r\n                })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!commentData)\r\n            refreshComment()\r\n    }, [commentData, refreshComment])\r\n\r\n    return <>\r\n        {commentData ?\r\n            <div className=\"card\" style={{ margin: \"1rem auto\" }}>\r\n                {(userData.userID === commentData.userID || userData.access === \"Admin\") &&\r\n                    <div style={{ position: \"absolute\", top: \"0.25rem\", right: \"0.25rem\", fontSize: \"0.7rem\" }}>\r\n                        {isEditMode ?\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                                <div className=\"LinkButton\" onClick={cancelEdit}>Cancel</div>\r\n                                <div style={{ width: \"0.5rem\" }}></div>\r\n                                <div className=\"LinkButton\" onClick={saveEdit} style={{ fontWeight: 700 }}>Save</div>\r\n                            </div>\r\n                            :\r\n                            <div className=\"LinkButton\" onClick={startEdit}>Edit</div>\r\n                        }\r\n                    </div>\r\n                }\r\n                <div className=\"card-content\">\r\n                    <div style={{ whiteSpace: \"pre-wrap\" }}>\r\n                        {isEditMode ?\r\n                            <>\r\n                                <div className=\"LinkButton-Danger\" onClick={deleteComment} style={{ position: \"absolute\", top: \"0.25rem\", left: \"0.25rem\", fontSize: \"0.7rem\" }}>Delete</div>\r\n                                <textarea onChange={e => setEditInput(e.target.value)} value={editInput} className=\"textarea\" />\r\n                            </>\r\n                            :\r\n                            <Linkify>\r\n                                {`${commentData.comment}`}\r\n                            </Linkify>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-footer\" style={{ justifyContent: \"space-between\", fontSize: \"0.7rem\", color: \"gray\", padding: \"1rem\" }}>\r\n                    <div>\r\n                        <div>{`${commentData.date}${commentData.isEdited ? \" (Edited)\" : \"\"}`}</div>\r\n                        <div className=\"LinkButton\"><Link to={`/p/${commentData.username}`}>{`${commentData.username}`}</Link></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            :\r\n            <div className=\"card\" style={{ margin: \"1rem auto\" }}>\r\n                <div className=\"card-content\">\r\n                    <progress className=\"progress is-small is-light\" max=\"100\"></progress>\r\n                </div>\r\n            </div>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default Comment","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nimport Post from '../components/Post'\r\nimport CommentPostBox from '../components/CommentPostBox'\r\nimport Comment from '../components/Comment'\r\n\r\nconst ExpandedPost = props => {\r\n    const { postID, onPostDelete } = props\r\n    const [userData] = useContext(UserContext)\r\n\r\n    const [commentIDs, setCommentIDs] = useState(null)\r\n\r\n    const refreshComments = useCallback(() => {\r\n        if (postID === null)\r\n            return\r\n\r\n        axios.get(`${process.env.REACT_APP_API_URL}/api/comments/list`,\r\n            { params: { PostID: postID } })\r\n            .then(res => {\r\n                setCommentIDs(res.data)\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }, [postID])\r\n\r\n    useEffect(() => {\r\n        if (!commentIDs)\r\n            refreshComments()\r\n    }, [commentIDs, refreshComments])\r\n\r\n    return <>\r\n        <Post\r\n            postID={postID}\r\n            isExpanded\r\n            onDelete={onPostDelete}\r\n        />\r\n        {userData.isLoggedIn &&\r\n            <CommentPostBox\r\n                postID={postID}\r\n                refreshComments={refreshComments}\r\n            />}\r\n        {commentIDs && commentIDs.length > 0 &&\r\n            <div style={{ width: \"40rem\", margin: \"1rem auto\", fontWeight: 600, color: \"gray\", paddingLeft: \"2rem\" }} >Comments</div>\r\n        }\r\n        {commentIDs &&\r\n            commentIDs.map(commentID => <Comment\r\n                key={commentID}\r\n                commentID={commentID}\r\n                refreshComments={refreshComments}\r\n            />)\r\n        }\r\n    </>\r\n}\r\n\r\nexport default ExpandedPost","import React from 'react'\r\nimport Modal from 'react-modal'\r\n\r\nimport ExpandedPost from '../components/ExpandedPost'\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst PostModal = props => {\r\n    const { isOpen, closeModal, postID } = props\r\n\r\n    const onPostDelete = () => {\r\n        closeModal()\r\n    }\r\n\r\n    return <Modal\r\n        isOpen={isOpen}\r\n        onRequestClose={closeModal}\r\n        style={{\r\n            content: {\r\n                padding: \"2rem\",\r\n                maxWidth: \"60rem\",\r\n                maxHeight: \"100%\",\r\n                margin: \"auto\"\r\n            },\r\n            overlay: {\r\n                zIndex: 35,\r\n                backgroundColor: \"rgba(128, 128, 128, 0.7)\"\r\n            }\r\n        }}\r\n    >\r\n        <div className=\"container\">\r\n            <ExpandedPost\r\n            postID={postID}\r\n            onPostDelete={onPostDelete} />\r\n        </div>\r\n    </Modal>\r\n}\r\n\r\nexport default PostModal","import React, { useEffect, useState, useContext, useCallback, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport noScroll from 'no-scroll'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nimport PostBox from '../components/PostBox'\r\nimport Post from '../components/Post'\r\nimport PostModal from '../components/PostModal'\r\n\r\nconst Home = props => {\r\n    const [userData] = useContext(UserContext)\r\n    const [sayHi, setSayHi] = useState(null) // Check if connection to server established\r\n\r\n    const [postIDs, setPostIDs] = useState(null)\r\n\r\n    const [isPostModalVisible, setIsPostModalVisible] = useState(false)\r\n    const [selectedPostID, setSelectedPostID] = useState(null)\r\n    const [refreshIndex, setRefreshIndex] = useState(null)\r\n\r\n    const getPostIDs = useRef()\r\n    const isFetching = useRef(false)\r\n    getPostIDs.current = () => { return postIDs }\r\n\r\n    const refreshPosts = useCallback(() => {\r\n        axios.get(`${process.env.REACT_APP_API_URL}/api/home/posts`,\r\n            { params: { LastID: null } })\r\n            .then(res => setPostIDs(res.data))\r\n            .catch(() => toast.error(\"Sorry, something went wrong\"))\r\n    }, [])\r\n\r\n    const getMorePosts = useCallback(() => {\r\n        const posts = getPostIDs.current()\r\n\r\n        if (!posts || posts.length < 1)\r\n            return\r\n\r\n        const lastID = posts[posts.length - 1]\r\n\r\n        if (lastID <= 1)\r\n            return\r\n\r\n        isFetching.current = true\r\n        axios.get(`${process.env.REACT_APP_API_URL}/api/home/posts`,\r\n            { params: { lastID } })\r\n            .then(res => setPostIDs([...postIDs, ...res.data]))\r\n            .catch(() => toast.error(\"Sorry, something went wrong\"))\r\n            .finally(() => isFetching.current = false)\r\n    }, [postIDs])\r\n\r\n    const closePostModal = () => {\r\n        setIsPostModalVisible(false)\r\n        setRefreshIndex(selectedPostID)\r\n        setSelectedPostID(null)\r\n        window.history.replaceState(null, null, '/')\r\n    }\r\n\r\n    const openPostModal = postID => {\r\n        setSelectedPostID(postID)\r\n        setIsPostModalVisible(true)\r\n        window.history.replaceState(null, null, `/wh/${postID}`)\r\n    }\r\n\r\n    const sendHello = useCallback(() => {\r\n        axios.get(`${process.env.REACT_APP_API_URL}/api/home/hi`)\r\n            .then(() => {\r\n                setSayHi(true)\r\n            })\r\n            .catch(() => {\r\n                setSayHi(false)\r\n                // If an error occurred, it is likely because my free Heroku dyno hasn't spun up yet, so keep spamming until it does\r\n                setTimeout(() => { sendHello() }, 1000)\r\n            })\r\n    }, [])\r\n\r\n    const handleScroll = useCallback(e => {\r\n        if (!isFetching.current && window.innerHeight + document.documentElement.scrollTop + 200 >= document.documentElement.offsetHeight)\r\n            getMorePosts()\r\n    }, [getMorePosts])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll)\r\n        return () => window.removeEventListener('scroll', handleScroll)\r\n    }, [handleScroll])\r\n\r\n    useEffect(() => {\r\n        if (!sayHi) {\r\n            sendHello()\r\n        } else if (!postIDs) {\r\n            refreshPosts()\r\n        }\r\n    }, [sendHello, sayHi, refreshPosts, postIDs])\r\n\r\n    useEffect(() => { // Trigger infinite scroll if non enough height for a scrollbar\r\n        if (postIDs && postIDs.length > 0 && window.innerHeight > document.documentElement.offsetHeight)\r\n            handleScroll()\r\n    }, [postIDs, handleScroll])\r\n\r\n    useEffect(() => {\r\n        if (isPostModalVisible)\r\n            noScroll.on()\r\n        else\r\n            noScroll.off()\r\n    }, [isPostModalVisible])\r\n\r\n    return <>\r\n        {sayHi ?\r\n            <>\r\n                <div className=\"container\">\r\n                    <>\r\n                        {userData.isLoggedIn &&\r\n                            <PostBox refreshPosts={refreshPosts} />\r\n                        }\r\n                        {postIDs &&\r\n                            postIDs.map(postID => <Post\r\n                                key={postID}\r\n                                postID={postID}\r\n                                expandPost={openPostModal}\r\n                                refreshIndex={refreshIndex}\r\n                                setRefreshIndex={setRefreshIndex}\r\n                            />)\r\n                        }\r\n                    </>\r\n                </div>\r\n                <PostModal\r\n                    isOpen={isPostModalVisible}\r\n                    closeModal={closePostModal}\r\n                    postID={selectedPostID}\r\n                />\r\n            </>\r\n            :\r\n            <>\r\n                {sayHi === false ?\r\n                    <div className=\"container\">\r\n                        <h2 className=\"subtitle\" style={{ marginTop: \"2rem\" }}>Waking up the server...</h2>\r\n                        <progress className=\"progress is-small is-primary\" max=\"100\"></progress>\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n            </>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\n\r\nimport ExpandedPost from '../components/ExpandedPost'\r\n\r\nconst PostPage = props => {\r\n    const history = useHistory()\r\n    const { postID } = useParams()\r\n\r\n    const postDeleted = () => {\r\n        history.push(\"/\")\r\n    }\r\n\r\n    return <div className=\"container\">\r\n        <ExpandedPost postID={postID} onPostDelete={postDeleted} />\r\n    </div>\r\n}\r\n\r\nexport default PostPage","import React, { useEffect, useState, useCallback } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport axios from 'axios'\r\n\r\nimport Post from '../components/Post'\r\nimport PostModal from '../components/PostModal'\r\n\r\nconst Profile = props => {\r\n    const { username } = useParams()\r\n    const [profileData, setProfileData] = useState(null)\r\n    const [postIDs, setPostIDs] = useState(null)\r\n\r\n    const [isPostModalVisible, setIsPostModalVisible] = useState(false)\r\n    const [selectedPostID, setSelectedPostID] = useState(null)\r\n    const [refreshIndex, setRefreshIndex] = useState(null)\r\n\r\n    const refreshPosts = useCallback(() => {\r\n        axios.get(`${process.env.REACT_APP_API_URL}/api/profile/posts`,\r\n            { params: { UserID: profileData.userID } })\r\n            .then(res => setPostIDs(res.data))\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }, [profileData])\r\n\r\n    const closePostModal = () => {\r\n        setIsPostModalVisible(false)\r\n        setRefreshIndex(selectedPostID)\r\n        setSelectedPostID(null)\r\n        window.history.replaceState(null, null, `/p/${username}`)\r\n    }\r\n\r\n    const openPostModal = postID => {\r\n        setSelectedPostID(postID)\r\n        setIsPostModalVisible(true)\r\n        window.history.replaceState(null, null, `/wh/${postID}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`${process.env.REACT_APP_API_URL}/api/profile/user`,\r\n            { params: { Username: username } })\r\n            .then(res => setProfileData(res.data))\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }, [username])\r\n\r\n    useEffect(() => {\r\n        if (profileData) {\r\n            refreshPosts()\r\n        }\r\n    }, [profileData, refreshPosts])\r\n\r\n    return <>\r\n        <div className=\"container\">\r\n            {profileData &&\r\n                <>\r\n                    <h5 style={{ textAlign: \"center\" }} className=\"title\">{`${profileData.username}'s Posts`}</h5>\r\n                    <>\r\n                        {profileData.access !== \"User\" &&\r\n                            <h5 style={{ textAlign: \"center\" }} className=\"subtitle\">{profileData.access}</h5>\r\n                        }\r\n                    </>\r\n                </>\r\n            }\r\n            {postIDs &&\r\n                postIDs.map(postID => <Post\r\n                    key={postID}\r\n                    postID={postID}\r\n                    expandPost={openPostModal}\r\n                    refreshIndex={refreshIndex}\r\n                    setRefreshIndex={setRefreshIndex}\r\n                    isProfile\r\n                />)\r\n            }\r\n        </div>\r\n        <PostModal\r\n            isOpen={isPostModalVisible}\r\n            closeModal={closePostModal}\r\n            postID={selectedPostID}\r\n            refresh={refreshPosts}\r\n        />\r\n    </>\r\n}\r\n\r\nexport default Profile","import React, { useState, useContext } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios'\r\n\r\nimport UserContext from '../UserContext'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst Settings = props => {\r\n    const [userData] = useContext(UserContext)\r\n\r\n    const [currentPassword, setCurrentPassword] = useState(\"\")\r\n    const [newPassword, setNewPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    const [isCurrentPasswordVisible, setIsCurrentPasswordVisible] = useState(false)\r\n    const [isNewPasswordVisible, setIsNewPasswordVisible] = useState(false)\r\n    const [isConfirmPasswordVisible, setIsConfirmPasswordVisible] = useState(false)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        axios.patch(`${process.env.REACT_APP_API_URL}/api/settings/password`,\r\n            { Current: currentPassword, New: newPassword, Confirm: confirmPassword }, { headers: { Authorization: userData.token } })\r\n            .then(() => {\r\n                toast.info(\"Password updated\")\r\n                setCurrentPassword(\"\")\r\n                setNewPassword(\"\")\r\n                setConfirmPassword(\"\")\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }\r\n\r\n    return <>\r\n        {userData.isLoggedIn ?\r\n            <div className=\"container\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-title\">\r\n                        <h1>Update Password</h1>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <label htmlFor=\"current-password\" className=\"label\">Current Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded\">\r\n                                    <input value={currentPassword} onChange={e => setCurrentPassword(e.target.value)} className=\"input\" name=\"current-password\" type={isCurrentPasswordVisible ? \"input\" : \"password\"} placeholder=\"Current Password\" required />\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsCurrentPasswordVisible(!isCurrentPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isCurrentPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <label htmlFor=\"new-password\" className=\"label\">New Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded\">\r\n                                    <input value={newPassword} onChange={e => setNewPassword(e.target.value)} className=\"input\" name=\"new-password\" type={isNewPasswordVisible ? \"input\" : \"password\"} placeholder=\"New Password\" required />\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsNewPasswordVisible(!isNewPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isNewPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <label htmlFor=\"confirm-password\" className=\"label\">Confirm Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded\">\r\n                                    <input value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} className=\"input\" name=\"confirm-password\" type={isConfirmPasswordVisible ? \"input\" : \"password\"} placeholder=\"Confirm Password\" required />\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsConfirmPasswordVisible(!isConfirmPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isConfirmPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <p className=\"control\">\r\n                                    <button type=\"submit\" className=\"button is-primary\">Register</button>\r\n                                </p>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            :\r\n            <div className=\"container\">\r\n                Please log in or create an account to view this page.\r\n        </div>}\r\n    </>\r\n}\r\n\r\nexport default Settings","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faLock, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\r\nimport { toast } from 'react-toastify'\r\nimport { useCookies } from 'react-cookie'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport './css/LoginRegister.css'\r\n\r\nconst Register = props => {\r\n    const [isPasswordVisible, setIsPasswordVisible] = useState(false)\r\n    const [isConfirmPasswordVisible, setIsConfirmPasswordVisible] = useState(false)\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    const [, setCookie] = useCookies(['token'])\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        axios.post(`${process.env.REACT_APP_API_URL}/api/register`, { username, password, Confirm: confirmPassword })\r\n            .then(res => {\r\n                setCookie('token', res.data.jwt)\r\n                setRedirect(true)\r\n            })\r\n            .catch(err => {\r\n                if (err && err.response && err.response.data && err.response.data.error)\r\n                    toast.error(err.response.data.error)\r\n                else\r\n                    toast.error(\"Sorry, an error occured\")\r\n            })\r\n    }\r\n\r\n    if (redirect)\r\n        return <Redirect to=\"/\" />\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-title\">\r\n                        <h1>Registration</h1>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <label htmlFor=\"username\" className=\"label\">Username</label>\r\n                            <div className=\"field\">\r\n                                <p className=\"control has-icons-left\">\r\n                                    <input value={username} onChange={e => setUsername(e.target.value)} className=\"input\" type=\"text\" name=\"username\" placeholder=\"Username\" autoFocus required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <FontAwesomeIcon icon={faUser} />\r\n                                    </span>\r\n                                </p>\r\n                            </div>\r\n                            <label htmlFor=\"password\" className=\"label\">Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded has-icons-left\">\r\n                                    <input value={password} onChange={e => setPassword(e.target.value)} className=\"input\" name=\"password\" type={isPasswordVisible ? \"input\" : \"password\"} placeholder=\"Password\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <FontAwesomeIcon icon={faLock} />\r\n                                    </span>\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsPasswordVisible(!isPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <label htmlFor=\"confirm-password\" className=\"label\">Confirm Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded has-icons-left\">\r\n                                    <input value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} className=\"input\" name=\"confirm-password\" type={isConfirmPasswordVisible ? \"input\" : \"password\"} placeholder=\"Confirm Password\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <FontAwesomeIcon icon={faLock} />\r\n                                    </span>\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsConfirmPasswordVisible(!isConfirmPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isConfirmPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <p className=\"control\">\r\n                                    <button type=\"submit\" className=\"button is-primary\">Register</button>\r\n                                </p>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Register","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faLock, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\r\nimport { toast } from 'react-toastify'\r\nimport { useCookies } from 'react-cookie'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst Login = props => {\r\n    const [isPasswordVisible, setIsPasswordVisible] = useState(false)\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const [, setCookie] = useCookies(['token'])\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        axios.post(`${process.env.REACT_APP_API_URL}/api/login`, { username, password })\r\n            .then(res => {\r\n                if (res.data.error) {\r\n                    toast.error(res.data.error)\r\n                    return\r\n                }\r\n\r\n                setCookie('token', res.data.jwt)\r\n                setRedirect(true)\r\n            })\r\n            .catch()\r\n    }\r\n\r\n    if (redirect)\r\n        return <Redirect to=\"/\" />\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-title\">\r\n                        <h1>Login</h1>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <label htmlFor=\"username\" className=\"label\">Username</label>\r\n                            <div className=\"field\">\r\n                                <p className=\"control has-icons-left\">\r\n                                    <input value={username} onChange={e => setUsername(e.target.value)} className=\"input\" type=\"text\" name=\"username\" placeholder=\"Username\" autoFocus required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <FontAwesomeIcon icon={faUser} />\r\n                                    </span>\r\n                                </p>\r\n                            </div>\r\n                            <label htmlFor=\"password\" className=\"label\">Password</label>\r\n                            <div className=\"field has-addons\">\r\n                                <p className=\"control is-expanded has-icons-left\">\r\n                                    <input value={password} onChange={e => setPassword(e.target.value)} className=\"input\" name=\"password\" type={isPasswordVisible ? \"input\" : \"password\"} placeholder=\"Password\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <FontAwesomeIcon icon={faLock} />\r\n                                    </span>\r\n                                </p>\r\n                                <div className=\"control\">\r\n                                    <div onClick={() => setIsPasswordVisible(!isPasswordVisible)} className=\"button\" style={{ width: \"3rem\" }}>\r\n                                        <FontAwesomeIcon icon={isPasswordVisible ? faEye : faEyeSlash} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <p className=\"control\">\r\n                                    <button type=\"submit\" className=\"button is-primary\">Log In</button>\r\n                                </p>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Login","import React, { useEffect, useState, useRef } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { withCookies } from 'react-cookie'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst Logout = ({ cookies, ...props }) => {\r\n    const cookieState = useRef(document.cookie)\r\n    const [cookieCleared, setCookieCleared] = useState(false)\r\n\r\n    useEffect(() => {\r\n        cookies.remove('token')\r\n    }, [cookies])\r\n\r\n    useEffect(() => {\r\n        if (cookies.get('token'))\r\n            cookies.remove('token')\r\n        else\r\n            setCookieCleared(true)\r\n    }, [cookieState, cookies])\r\n\r\n    useEffect(() => {\r\n        if (cookieCleared)\r\n            toast.info(\"You have been logged out\")\r\n    }, [cookieCleared])\r\n\r\n    return <>\r\n        {cookieCleared ?\r\n            <Redirect to=\"/\" />\r\n            :\r\n            <>\r\n                <div>\r\n                    Logging out...\r\n                </div>\r\n                <div style={{ fontSize: \"0.8rem\", color: \"gray\" }}>\r\n                    Refresh if this gets stuck, sorry\r\n                </div>\r\n            </>}\r\n    </>\r\n}\r\n\r\nexport default withCookies(Logout)","import React from 'react'\r\n\r\nconst Error404 = props =>\r\n    <div className=\"container\">\r\n        <h1 className=\"title\">\r\n            404\r\n      </h1>\r\n        <p className=\"subtitle\">\r\n            Nothing was found at this location\r\n      </p>\r\n    </div>\r\n\r\nexport default Error404","import React, { useContext, useState, useEffect, useCallback } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\nimport './css/NavBar.css'\r\n\r\nconst NavBar = () => {\r\n    const [userData] = useContext(UserContext)\r\n    const [isActive, setIsActive] = useState(false)\r\n    const [isUsernameDropdownActive, setIsUsernameDropdownActive] = useState(false)\r\n\r\n    const handleClick = useCallback(e => {\r\n        if (isUsernameDropdownActive)\r\n            setIsUsernameDropdownActive(false)\r\n    }, [isUsernameDropdownActive])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('click', handleClick)\r\n        return () => window.removeEventListener('click', handleClick)\r\n    }, [handleClick])\r\n\r\n    return (\r\n        <nav style={{ marginBottom: \"1rem\" }} className=\"navbar is-dark\" role=\"navigation\" aria-label=\"main navigation\">\r\n            <div className=\"navbar-brand\">\r\n                <Link className=\"navbar-item NavBar-brand\" to=\"/\">Word Hole</Link>\r\n                <div onClick={() => setIsActive(!isActive)} role=\"button\" className={`${isActive ? \"is-active\" : \"\"} navbar-burger`} aria-label=\"menu\" aria-expanded=\"false\">\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`${isActive ? \"is-active\" : \"\"} navbar-menu`}>\r\n                <div className=\"navbar-end\">\r\n                    {userData.isLoggedIn ?\r\n                        <div id={\"navbar-username-dropdown-button\"} className={`navbar-item has-dropdown ${isUsernameDropdownActive ? \"is-active\" : \"\"}`}>\r\n                            <div className=\"navbar-link\" onClick={() => setIsUsernameDropdownActive(!isUsernameDropdownActive)}>\r\n                                {userData.username}\r\n                            </div>\r\n\r\n                            <div className=\"navbar-dropdown\">\r\n                                <Link className=\"navbar-item\" to={`/p/${userData.username}`}>Profile</Link>\r\n                                <Link className=\"navbar-item\" to={`/settings`}>Settings</Link>\r\n                                <hr className=\"navbar-divider\" />\r\n                                <Link className=\"navbar-item\" to={\"/logout\"}>Log Out</Link>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div className=\"navbar-item\">\r\n                            <div className=\"buttons\">\r\n                                <Link className=\"button is-dark\" to={\"/register\"}>Register</Link>\r\n                                <Link className=\"button is-primary\" to={\"/login\"}><strong>Log In</strong></Link>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </nav >\r\n    )\r\n}\r\n\r\nexport default NavBar","import React, { useContext, useEffect, useCallback } from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nimport UserContext from '../UserContext'\r\n\r\n// Handles setting globals for logins\r\nconst LoginWatcher = ({ cookies }) => {\r\n    const cookieState = document.cookie\r\n    const [, globalSetIsLoggedIn, globalSetUsername, globalSetUserID, globalSetAccess, globalSetToken] = useContext(UserContext)\r\n\r\n    const clearGlobals = useCallback(() => {\r\n        globalSetIsLoggedIn(false)\r\n        globalSetUsername(\"\")\r\n        globalSetUserID(null)\r\n        globalSetAccess(\"User\")\r\n        globalSetToken(null)\r\n    }, [globalSetIsLoggedIn, globalSetUsername, globalSetUserID, globalSetAccess, globalSetToken])\r\n\r\n    useEffect(() => {\r\n        const cookieToken = cookies.get('token')\r\n\r\n        if (cookieToken) {\r\n            const token = jwt_decode(cookieToken)\r\n            if (token.exp > (Date.now() / 1000)) {\r\n                globalSetIsLoggedIn(true)\r\n                globalSetUsername(token[\"Username\"])\r\n                globalSetUserID(Number(token[\"UserID\"]))\r\n                globalSetAccess(token[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"])\r\n                globalSetToken(cookieToken)\r\n            } else {\r\n                cookies.remove('token')\r\n                clearGlobals()\r\n            }\r\n        } else {\r\n            clearGlobals()\r\n        }\r\n    }, [cookies, cookieState, globalSetIsLoggedIn, globalSetUsername, globalSetUserID, globalSetAccess, globalSetToken, clearGlobals])\r\n\r\n    return <></>\r\n}\r\n\r\nexport default withCookies(LoginWatcher)","import React from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport { UserProvider } from './UserContext'\r\n\r\nimport Home from './pages/Home'\r\nimport PostPage from './pages/PostPage'\r\nimport Profile from './pages/Profile'\r\nimport Settings from './pages/Settings'\r\nimport Register from './pages/Register'\r\nimport Login from './pages/Login'\r\nimport Logout from './pages/Logout'\r\nimport Error404 from './pages/Error404'\r\n\r\nimport NavBar from './components/NavBar'\r\nimport LoginWatcher from './components/LoginWatcher'\r\n\r\ntoast.configure({\r\n  hideProgressBar: true,\r\n  newestOnTop: true,\r\n  autoClose: 3000\r\n})\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <UserProvider>\r\n        <LoginWatcher />\r\n        <NavBar />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/wh/:postID\" exact component={PostPage} />\r\n          <Route path=\"/p/:username\" exact component={Profile} />\r\n          <Route path=\"/settings\" exact component={Settings} />\r\n          <Route path=\"/register\" exact component={Register} />\r\n          <Route path=\"/login\" exact component={Login} />\r\n          <Route path=\"/logout\" exact component={Logout} />\r\n          <Route component={Error404} />\r\n        </Switch>\r\n      </UserProvider>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'bulma/css/bulma.css'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}